[{"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\index.js":"1","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\App.js":"2","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\store.js":"3","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\ProtectedRoute.js":"4","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Login\\Login.js":"5","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Home\\Home.js":"6","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Login\\SignIn.js":"7","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Signup\\Signup.js":"8","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\index.js":"9","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Auth.js":"10","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Url_base.js":"11","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Login\\AlphaAnimation.js":"12","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Hooks\\useGetUser.js":"13","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Hooks\\useToken.js":"14","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Selectors\\UserSelector.js":"15","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Atoms\\Atoms.js":"16","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\authActions.js":"17","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\userReducer.js":"18","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SnackBars\\CustomSnackBar.js":"19","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\TopBar\\CustomTopBar.js":"20","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\notifyReducer.js":"21","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\authReducer.js":"22","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\types.js":"23","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Empty.js":"24","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Selectors\\WorkspaceSelector.js":"25","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Workspaces\\WorkspacesContainer.js":"26","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Profile\\ProfileContainer.js":"27","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Favorite\\FavoriteContainer.js":"28","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Results\\Result.js":"29","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SideBar\\CustomAccording.js":"30","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Workspaces items\\WorkspaceItem.js":"31","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Product Section\\ProductForm.js":"32","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Language Items\\Langue.js":"33","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Brainstorming\\Value proposition\\ValuePropositionForm.js":"34","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Headlines\\GoogleHeadlinesForm.js":"35","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\InstagramCaptions\\InstagramCaptionForm.js":"36","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Description\\GoogleDescriptionForm.js":"37","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Link Desc\\FacebookLinkDescForm.js":"38","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Headlines\\FacebookHeadLinesForm.js":"39","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Primary Text\\FacebookPrimaryTextForm.js":"40","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\ContentImprover\\ContentImproverForm.js":"41","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\Listicles\\ListiclesForm.js":"42","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ServicesPage\\ServicePageForm.js":"43","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\BlogIntro\\BlogIntroForm.js":"44","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\BlogPosts\\BlogPostForm.js":"45","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\SentenceExpander\\SentenceExpanderForm.js":"46","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ProductPage\\ProductPageForm.js":"47","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\HomePage\\HomePageForm.js":"48","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Pain agitate solution\\PASForm.js":"49","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Marketing angles\\MarketingAnglesForm.js":"50","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Problem promise proof\\PPPForm.js":"51","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature to benefits\\FTBForm.js":"52","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Functional benefits\\FunctionalBenefitForm.js":"53","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Before After bridge\\BABForm.js":"54","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature advantage benefit\\FABForm.js":"55","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\AIDA\\AidaForm.js":"56","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Emotional angles\\EmoAnglesForm.js":"57","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Email Section\\Email Headlines\\EmailForm.js":"58","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\index.js":"59","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Product Section\\CustomTextArea.js":"60","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Email Section\\Email Headlines\\CustomTextArea.js":"61","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Emotional angles\\CustomTextArea.js":"62","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\AIDA\\CustomTextArea.js":"63","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature advantage benefit\\CustomTextArea.js":"64","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Before After bridge\\CustomTextArea.js":"65","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Functional benefits\\CustomTextArea.js":"66","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature to benefits\\CustomTextArea.js":"67","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Problem promise proof\\CustomTextArea.js":"68","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Selectors\\TonesSelector.js":"69","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Product Section\\CustomInput.js":"70","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SideBar\\SingleAccording.js":"71","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Email Section\\Email Headlines\\CustomInput.js":"72","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Emotional angles\\CustomInput.js":"73","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\AIDA\\CustomInput.js":"74","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature advantage benefit\\CustomInput.js":"75","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Voice tone\\VoiceToneList.js":"76","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Before After bridge\\CustomInput.js":"77","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Functional benefits\\CustomInput.js":"78","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature to benefits\\CustomInput.js":"79","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Problem promise proof\\CustomInput.js":"80","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SideBar\\SideMenuButton.js":"81","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Marketing angles\\CustomTextArea.js":"82","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Pain agitate solution\\CustomTextArea.js":"83","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\HomePage\\CustomTextArea.js":"84","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ProductPage\\CustomTextArea.js":"85","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\SentenceExpander\\CustomTextArea.js":"86","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\BlogPosts\\CustomTextArea.js":"87","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\BlogIntro\\CustomTextArea.js":"88","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ServicesPage\\CustomTextArea.js":"89","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\Listicles\\CustomTextArea.js":"90","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Marketing angles\\CustomInput.js":"91","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Pain agitate solution\\CustomInput.js":"92","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\HomePage\\CustomInput.js":"93","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\ContentImprover\\CustomTextArea.js":"94","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Primary Text\\CustomTextArea.js":"95","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Headlines\\CustomTextArea.js":"96","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ProductPage\\CustomInput.js":"97","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\BlogPosts\\CustomInput.js":"98","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\SentenceExpander\\CustomInput.js":"99","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\BlogIntro\\CustomInput.js":"100","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\Shared\\custom Multiinputs\\MultiInputs.js":"101","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ServicesPage\\CustomInput.js":"102","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\Listicles\\CustomInput.js":"103","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Description\\CustomTextArea.js":"104","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Link Desc\\CustomTextArea.js":"105","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\InstagramCaptions\\CustomTextArea.js":"106","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Headlines\\CustomTextArea.js":"107","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\ContentImprover\\CustomInput.js":"108","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Primary Text\\CustomInput.js":"109","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Brainstorming\\Value proposition\\CustomTextArea.js":"110","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Headlines\\CustomInput.js":"111","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Link Desc\\CustomInput.js":"112","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Description\\CustomInput.js":"113","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\InstagramCaptions\\CustomInput.js":"114","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Headlines\\CustomInput.js":"115","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Brainstorming\\Value proposition\\CustomInput.js":"116","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Favorite\\Favorite.js":"117","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Results\\CustomCard.js":"118","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Profile\\Profile.js":"119","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Workspaces\\Workspaces.js":"120","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Favorite\\SingleFav.js":"121","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Profile\\PasswordSection.js":"122","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Profile\\AccountInfoSection.js":"123","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Profile\\Plans.js":"124","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\SingleRow.js":"125","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\NewWorkSpace.js":"126","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\userActions.js":"127","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\EmptyCustomBadge.js":"128","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\CustomBadge.js":"129"},{"size":515,"mtime":1627983606499,"results":"130","hashOfConfig":"131"},{"size":1293,"mtime":1627919603949,"results":"132","hashOfConfig":"131"},{"size":487,"mtime":1625658581000,"results":"133","hashOfConfig":"131"},{"size":828,"mtime":1625658581000,"results":"134","hashOfConfig":"131"},{"size":12619,"mtime":1628206937643,"results":"135","hashOfConfig":"131"},{"size":305,"mtime":1625658581000,"results":"136","hashOfConfig":"131"},{"size":15526,"mtime":1625658581000,"results":"137","hashOfConfig":"131"},{"size":13537,"mtime":1627919721851,"results":"138","hashOfConfig":"131"},{"size":251,"mtime":1628002756291,"results":"139","hashOfConfig":"131"},{"size":2801,"mtime":1625658581000,"results":"140","hashOfConfig":"131"},{"size":122,"mtime":1625658581000,"results":"141","hashOfConfig":"131"},{"size":6168,"mtime":1625658581000,"results":"142","hashOfConfig":"131"},{"size":145,"mtime":1625658581000,"results":"143","hashOfConfig":"131"},{"size":376,"mtime":1625658581000,"results":"144","hashOfConfig":"131"},{"size":398,"mtime":1625658581000,"results":"145","hashOfConfig":"131"},{"size":1117,"mtime":1628458546370,"results":"146","hashOfConfig":"131"},{"size":1933,"mtime":1628207204221,"results":"147","hashOfConfig":"131"},{"size":1697,"mtime":1628076223756,"results":"148","hashOfConfig":"131"},{"size":1421,"mtime":1625658581000,"results":"149","hashOfConfig":"131"},{"size":25397,"mtime":1627986496696,"results":"150","hashOfConfig":"131"},{"size":251,"mtime":1625658581000,"results":"151","hashOfConfig":"131"},{"size":340,"mtime":1627984666213,"results":"152","hashOfConfig":"131"},{"size":1861,"mtime":1628071743472,"results":"153","hashOfConfig":"131"},{"size":669,"mtime":1625658581000,"results":"154","hashOfConfig":"131"},{"size":402,"mtime":1625658581000,"results":"155","hashOfConfig":"131"},{"size":324,"mtime":1625658581000,"results":"156","hashOfConfig":"131"},{"size":213,"mtime":1625658581000,"results":"157","hashOfConfig":"131"},{"size":1621,"mtime":1625658581000,"results":"158","hashOfConfig":"131"},{"size":4943,"mtime":1625658581000,"results":"159","hashOfConfig":"131"},{"size":4223,"mtime":1625658581000,"results":"160","hashOfConfig":"131"},{"size":626,"mtime":1625658581000,"results":"161","hashOfConfig":"131"},{"size":6115,"mtime":1625658581000,"results":"162","hashOfConfig":"131"},{"size":568,"mtime":1625658581000,"results":"163","hashOfConfig":"131"},{"size":6236,"mtime":1625658581000,"results":"164","hashOfConfig":"131"},{"size":6133,"mtime":1625658581000,"results":"165","hashOfConfig":"131"},{"size":6091,"mtime":1625658581000,"results":"166","hashOfConfig":"131"},{"size":6136,"mtime":1625658581000,"results":"167","hashOfConfig":"131"},{"size":6137,"mtime":1625658581000,"results":"168","hashOfConfig":"131"},{"size":6129,"mtime":1625658581000,"results":"169","hashOfConfig":"131"},{"size":6144,"mtime":1625658581000,"results":"170","hashOfConfig":"131"},{"size":4400,"mtime":1625658581000,"results":"171","hashOfConfig":"131"},{"size":4377,"mtime":1625658581000,"results":"172","hashOfConfig":"131"},{"size":7857,"mtime":1625658581000,"results":"173","hashOfConfig":"131"},{"size":5151,"mtime":1625658581000,"results":"174","hashOfConfig":"131"},{"size":8013,"mtime":1625658581000,"results":"175","hashOfConfig":"131"},{"size":4404,"mtime":1625658581000,"results":"176","hashOfConfig":"131"},{"size":7855,"mtime":1625658581000,"results":"177","hashOfConfig":"131"},{"size":7843,"mtime":1625658581000,"results":"178","hashOfConfig":"131"},{"size":6101,"mtime":1625658581000,"results":"179","hashOfConfig":"131"},{"size":4571,"mtime":1625658581000,"results":"180","hashOfConfig":"131"},{"size":6105,"mtime":1625658581000,"results":"181","hashOfConfig":"131"},{"size":6031,"mtime":1625658581000,"results":"182","hashOfConfig":"131"},{"size":3954,"mtime":1625658581000,"results":"183","hashOfConfig":"131"},{"size":6090,"mtime":1625658581000,"results":"184","hashOfConfig":"131"},{"size":6108,"mtime":1625658581000,"results":"185","hashOfConfig":"131"},{"size":6225,"mtime":1625658581000,"results":"186","hashOfConfig":"131"},{"size":4105,"mtime":1625658581000,"results":"187","hashOfConfig":"131"},{"size":6102,"mtime":1625658581000,"results":"188","hashOfConfig":"131"},{"size":164,"mtime":1628067097029,"results":"189","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"190","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"191","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"192","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"193","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"194","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"195","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"196","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"197","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"198","hashOfConfig":"131"},{"size":596,"mtime":1625658581000,"results":"199","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"200","hashOfConfig":"131"},{"size":2801,"mtime":1625658581000,"results":"201","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"202","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"203","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"204","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"205","hashOfConfig":"131"},{"size":1858,"mtime":1625658581000,"results":"206","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"207","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"208","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"209","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"210","hashOfConfig":"131"},{"size":1239,"mtime":1625658581000,"results":"211","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"212","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"213","hashOfConfig":"131"},{"size":664,"mtime":1625658581000,"results":"214","hashOfConfig":"131"},{"size":664,"mtime":1625658581000,"results":"215","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"216","hashOfConfig":"131"},{"size":664,"mtime":1625658581000,"results":"217","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"218","hashOfConfig":"131"},{"size":664,"mtime":1625658581000,"results":"219","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"220","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"221","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"222","hashOfConfig":"131"},{"size":993,"mtime":1625658581000,"results":"223","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"224","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"225","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"226","hashOfConfig":"131"},{"size":993,"mtime":1625658581000,"results":"227","hashOfConfig":"131"},{"size":993,"mtime":1625658581000,"results":"228","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"229","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"230","hashOfConfig":"131"},{"size":2508,"mtime":1625658581000,"results":"231","hashOfConfig":"131"},{"size":993,"mtime":1625658581000,"results":"232","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"233","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"234","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"235","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"236","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"237","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"238","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"239","hashOfConfig":"131"},{"size":653,"mtime":1625658581000,"results":"240","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"241","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"242","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"243","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"244","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"245","hashOfConfig":"131"},{"size":980,"mtime":1625658581000,"results":"246","hashOfConfig":"131"},{"size":1094,"mtime":1625658581000,"results":"247","hashOfConfig":"131"},{"size":4041,"mtime":1625658581000,"results":"248","hashOfConfig":"131"},{"size":4458,"mtime":1627987029632,"results":"249","hashOfConfig":"131"},{"size":2368,"mtime":1625658581000,"results":"250","hashOfConfig":"131"},{"size":3831,"mtime":1625658581000,"results":"251","hashOfConfig":"131"},{"size":4224,"mtime":1628462472889,"results":"252","hashOfConfig":"131"},{"size":4523,"mtime":1628461909464,"results":"253","hashOfConfig":"131"},{"size":1447,"mtime":1625658581000,"results":"254","hashOfConfig":"131"},{"size":2954,"mtime":1625658581000,"results":"255","hashOfConfig":"131"},{"size":2700,"mtime":1625658581000,"results":"256","hashOfConfig":"131"},{"size":5932,"mtime":1628461427454,"results":"257","hashOfConfig":"131"},{"size":376,"mtime":1625658581000,"results":"258","hashOfConfig":"131"},{"size":584,"mtime":1625658581000,"results":"259","hashOfConfig":"131"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"1wr7crr",{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"262"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"262"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"262"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"262"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"262"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"262"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"262"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"262"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"262"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"262"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"262"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"262"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"262"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"262"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"262"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"262"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"262"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"262"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"262"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"262"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"262"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"262"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"262"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"262"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"262"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"262"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"262"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"262"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"262"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"262"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"262"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"262"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"262"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"262"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"262"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"262"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"262"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"262"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"262"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"262"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"262"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"262"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"262"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"262"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"262"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"262"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"262"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"262"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"262"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"262"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"262"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\index.js",[],["570","571"],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\App.js",["572","573","574","575"],"// root app\n// i handle routes here\n// just switch from route to protected route to lock the available routes\n\nimport React from \"react\";\nimport { Router, Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport SignIn from \"./Views/Login/SignIn\";\nimport { RecoilRoot } from \"recoil\";\nimport Home from \"./Views/Home/Home\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Login from \"./Views/Login/Login\";\nimport Signup from \"./Views/Signup/Signup\";\n\nimport { useSelector } from \"react-redux\";\nconst history = createBrowserHistory();\n\nfunction App() {\n  const token = useSelector((state) => state.authReducer.data.access_token);\n  return (\n    <BrowserRouter>\n      <RecoilRoot>\n        <Router history={history}>\n          <Switch>\n            {/*<Route component={SignIn} exact path='/'/> */}\n            <Route component={Login} exact path=\"/\"></Route>\n            {/* <ProtectedRoute  component={Home}  path='/home' /> */}\n\n            {<Route component={Home} path=\"/home\" />}\n            {<Route component={Signup} path=\"/signup\" />}\n\n            {/* <ProtectedRoute  component={Dashboard}  path='/home' /> */}\n          </Switch>\n        </Router>\n      </RecoilRoot>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\store.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\ProtectedRoute.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Login\\Login.js",["576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598"],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Home\\Home.js",["599","600"],"// display the customTopBar\n//go to the component for more details\n\nimport React from \"react\";\nimport CustomTopBar from \"../../Components/TopBar/CustomTopBar\";\nimport jwt from \"jsonwebtoken\";\nimport { useSelector } from \"react-redux\";\n\nfunction Home() {\n  return <CustomTopBar />;\n}\n\nexport default Home;\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Login\\SignIn.js",["601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621"],"// this component handle the login and the forget password forms :: depends on the user desire\n// Authjs handle all the logique here\n\nimport React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport auth from \"../../Auth\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useToken from \"../../Hooks/useToken\";\nimport useGetUser from \"../../Hooks/useGetUser\";\nimport jwt from \"jsonwebtoken\";\nimport logo from \"../../Assets/img/pluma logo/Logo.svg\";\nimport CustomSnackbar from \"../../Components/SnackBars/CustomSnackBar\";\nimport axios from \"axios\";\nimport { uri } from \"../../Url_base\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { IconButton } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\nimport \"../../Assets/Css/Login.css\";\nimport { ReactComponent as BackIcon } from \"../../Assets/Icons/svg/fi-rs-arrow-small-left.svg\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue } from \"recoil\";\n\nimport { userState } from \"../../Atoms/Atoms\";\nimport { updateUser } from \"../../Selectors/UserSelector\";\n\nimport alpha_a from \"../../Assets/img/Angle_C4/a2_0003.png\";\nimport alpha_K from \"../../Assets/img/Angle_C4/K1_0003.png\";\nimport alpha_4 from \"../../Assets/img/Angle_C4/4_0003.png\";\nimport alpha_i from \"../../Assets/img/Angle_C4/_Semicolon0003.png\";\nimport alpha_r from \"../../Assets/img/Angle_C4/r2_0003.png\";\nimport alpha_j from \"../../Assets/img/Angle_C4/j2_0003.png\";\nimport alpha_dot from \"../../Assets/img/Angle_C4/_Period0003.png\";\nimport alpha_1 from \"../../Assets/img/Angle_C4/1_0003.png\";\nimport alpha_and from \"../../Assets/img/Angle_C4/_Ampersand0003.png\";\nimport alpha_m from \"../../Assets/img/Angle_C4/m2_0003.png\";\nimport alpha_Q from \"../../Assets/img/Angle_C4/Q1_0003.png\";\n\nimport {\n  aMotion,\n  kMotion,\n  fourMotion,\n  iMotion,\n  oneMotion,\n  rMotion,\n  zMotion,\n  QMotion,\n  andMotion,\n  mMotion,\n  jMotion,\n  dotMotion,\n} from \"./AlphaAnimation\";\nimport { useDispatch } from \"react-redux\";\nimport { signIn } from \"../../redux/actions/authActions\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"userName\":\n      return { ...state, email: action.value };\n    case \"password\":\n      return { ...state, password: action.value };\n\n    default:\n      return state;\n  }\n};\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\n      {\"Copyright © MartechLabs \"}\n      {/* <Link color=\"inherit\" href=\"#\">\n        Logistio\n      </Link>{' '} */}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(5),\n    width: 200,\n    height: 50,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    background: \"#6A7BFF\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    \"&:hover\": {\n      background: \"#6A7BFF\",\n    },\n    borderRadius: \"0px\",\n  },\n  loader: {\n    margin: \"10px 50% 10px\",\n    textAlign: \"center\",\n    color: \"#6A7BFF\",\n  },\n  txtInput: {\n    \"& label.Mui-focused\": {\n      color: \"grey\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"black\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"black\",\n      },\n    },\n  },\n}));\n\nexport default function SignIn(props) {\n  const [_user, _setUser] = useRecoilState(userState);\n  const log = useRecoilValue(updateUser);\n\n  const sideMenuVariant = {\n    hidden: {\n      scale: 0,\n    },\n    visible: {\n      scale: 1,\n\n      transition: {\n        duration: 0.6,\n      },\n    },\n  };\n\n  const [setToken, getToken] = useToken();\n  const classes = useStyles();\n  const [userInfo, dispatch] = React.useReducer(reducer, initialState);\n  let history = useHistory();\n  const [loading, setloading] = React.useState(false);\n  const [loadingResetPass, setloadingResetPass] = React.useState(false);\n\n  const [status, setStatus] = React.useState(\"\");\n  const [openLogin, setOpenLogin] = React.useState(false);\n\n  const [statusResetPass, setStatusResetPass] = React.useState(\"\");\n  const [openPassReset, setOpenPassReset] = React.useState(false);\n\n  const [forgotPass, setforgotPass] = React.useState(false);\n\n  const AuthHandler = () => {\n    setloading(true);\n    /*auth.login(userInfo, setloading, setStatus, setOpenLogin, (token) => {\n      setToken(token);\n      console.log(\"DECODED__token:::\", jwt.decode(token));\n    });*/\n\n    signIn(userInfo);\n  };\n\n  const _reset = () => {\n    // axios.post(`${uri.link}/password_reset`, {\n    //     username:userInfo.username,\n    //   })\n    //   .then(function (res) {\n    //     if(res.status===200){\n    //       setStatusResetPass(200);\n    //         console.log('RESTE RESPONSE -------->',res.data)\n    //     }\n    //         else\n    //         setStatusResetPass('error')\n    //   })\n    //   .catch(function (error) {\n    //     setStatusResetPass('error')\n    //   });\n    setloadingResetPass(true);\n    setOpenPassReset(true);\n    setStatusResetPass(\"error\");\n  };\n\n  React.useEffect(() => {\n    if (auth.isAuthenticated()) history.push(\"/home\");\n  }, [history]);\n\n  console.log(\"USERR\", _user);\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      {status === \"error\" ? (\n        <CustomSnackbar\n          setter={setOpenLogin}\n          open={openLogin}\n          content=\"Ops, Wrong user credentials !\"\n          type=\"error\"\n        />\n      ) : null}\n      {statusResetPass === 200 ? (\n        <CustomSnackbar\n          setter={setOpenPassReset}\n          open={openPassReset}\n          content=\"An email has been sent!\"\n          type=\"success\"\n        />\n      ) : statusResetPass === \"error\" ? (\n        <CustomSnackbar\n          setter={setOpenPassReset}\n          open={openPassReset}\n          content=\"Ops, Something Wrong!\"\n          type=\"error\"\n        />\n      ) : null}\n\n      <Grid item md={6} className=\"imgContainer\">\n        <Grid\n          item\n          md={12}\n          xs={12}\n          sm={12}\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <motion.img\n            draggable={false}\n            variants={aMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_a}\n          />\n\n          <motion.img\n            draggable={false}\n            variants={kMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_K}\n          />\n          <motion.img\n            draggable={false}\n            variants={fourMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_4}\n          />\n        </Grid>\n\n        <Grid\n          item\n          md={12}\n          xs={12}\n          sm={12}\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <motion.img\n            draggable={false}\n            variants={iMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_i}\n          />\n          <motion.img\n            draggable={false}\n            variants={rMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_r}\n          />\n          <motion.img\n            draggable={false}\n            variants={jMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_j}\n          />\n        </Grid>\n\n        <Grid item md={12} xs={12} sm={12} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <motion.img\n            draggable={false}\n            variants={jMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            style={{ marginRight: \"130px\" }}\n            src={alpha_j}\n          />\n          <motion.img\n            draggable={false}\n            variants={oneMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            style={{ marginRight: \"130px\" }}\n            src={alpha_1}\n          />\n        </Grid>\n\n        <Grid\n          item\n          md={12}\n          xs={12}\n          sm={12}\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <motion.img\n            draggable={false}\n            variants={fourMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_4}\n          />\n          <motion.img\n            draggable={false}\n            variants={dotMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_dot}\n          />\n          <motion.img\n            draggable={false}\n            variants={kMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_K}\n          />\n        </Grid>\n        <Grid\n          item\n          md={12}\n          xs={12}\n          sm={12}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <motion.img\n            draggable={false}\n            variants={QMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_Q}\n          />\n          <motion.img\n            draggable={false}\n            variants={andMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_and}\n          />\n          <motion.img\n            draggable={false}\n            variants={mMotion}\n            animate=\"animateAlpha\"\n            width=\"130\"\n            src={alpha_m}\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={6}\n        component={Paper}\n        elevation={0}\n        square\n        style={{\n          padding: \"50px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <motion.div\n          variants={sideMenuVariant}\n          initial=\"hidden\"\n          animate=\"visible\"\n          className={classes.paper}\n        >\n          <Avatar className={classes.avatar} src={logo} variant=\"square\" />\n          <Typography\n            variant=\"span\"\n            style={{ alignSelf: \"center\", fontSize: \"15px\", fontWeight: 100 }}\n          >\n            {forgotPass\n              ? \"Enter your email and we send you a password reset link.\"\n              : \"Welcome back! Please login to your account.\"}\n          </Typography>\n          {!forgotPass ? (\n            <Grid item md={6}>\n              <form className={classes.form} noValidate>\n                <TextField\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"userName\"\n                  label=\"Email Adress\"\n                  name=\"userName\"\n                  autoComplete=\"userName\"\n                  autoFocus\n                  className={classes.txtInput}\n                  onChange={(e) => {\n                    dispatch({ type: \"userName\", value: e.target.value });\n                  }}\n                />\n                <TextField\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  className={classes.txtInput}\n                  onChange={(e) => {\n                    dispatch({ type: \"password\", value: e.target.value });\n                  }}\n                />\n\n                <motion.span\n                  whileHover={{ color: \"#6A7BFF\" }}\n                  style={{\n                    color: \"#c4c4c4\",\n                    fontSize: \"13px\",\n                    cursor: \"pointer\",\n                    float: \"right\",\n                  }}\n                  onClick={() => {\n                    setforgotPass(true);\n                    setloading(false);\n                  }}\n                >\n                  Forgot Password\n                </motion.span>\n                {!loading && (\n                  <Button\n                    onClick={AuthHandler}\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.submit}\n                  >\n                    Log in\n                  </Button>\n                )}\n                {loading && <CircularProgress size={24} className={classes.loader} />}\n\n                <Box mt={5}>\n                  <Copyright />\n                </Box>\n              </form>\n            </Grid>\n          ) : (\n            <Grid item md={8}>\n              <form className={classes.form} noValidate>\n                <TextField\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"userName\"\n                  label=\"Email Adress\"\n                  name=\"userName\"\n                  autoComplete=\"userName\"\n                  autoFocus\n                  className={classes.txtInput}\n                  onChange={(e) => {\n                    dispatch({ type: \"userName\", value: e.target.value });\n                  }}\n                />\n\n                {!loadingResetPass && (\n                  <Button onClick={_reset} fullWidth variant=\"contained\" className={classes.submit}>\n                    Send Request\n                  </Button>\n                )}\n                {loadingResetPass && (\n                  <div style={{ textAlign: \"center\" }}>\n                    <CircularProgress size={24} className={classes.loader} />\n                  </div>\n                )}\n                <Grid item style={{ textAlign: \"center\" }}>\n                  <motion.span\n                    whileHover={{ color: \"#6A7BFF\" }}\n                    style={{\n                      color: \"#c4c4c4\",\n                      fontSize: \"13px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => {\n                      setforgotPass(false);\n                      setloadingResetPass(false);\n                    }}\n                  >\n                    Already have an account? Sign in.\n                  </motion.span>\n                </Grid>\n\n                {/* <BackIcon style={{width:'40px',height:'40px',fill:'#c4c4c4',cursor:'pointer'}} onClick={()=>{setforgotPass(false);setloadingResetPass(false)}} /> */}\n              </form>\n            </Grid>\n          )}\n        </motion.div>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Signup\\Signup.js",["622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VisibilityOffOutlinedIcon from \"@material-ui/icons/VisibilityOffOutlined\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport auth from \"../../Auth\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useToken from \"../../Hooks/useToken\";\r\nimport useGetUser from \"../../Hooks/useGetUser\";\r\nimport logo from \"../../Assets/img/pluma logo/Logo.svg\";\r\nimport CustomSnackbar from \"../../Components/SnackBars/CustomSnackBar\";\r\nimport axios from \"axios\";\r\nimport { uri } from \"../../Url_base\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"../../Assets/Css/Login.css\";\r\nimport { ReactComponent as BackIcon } from \"../../Assets/Icons/svg/fi-rs-arrow-small-left.svg\";\r\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { userState } from \"../../Atoms/Atoms\";\r\nimport { updateUser } from \"../../Selectors/UserSelector\";\r\n\r\nimport alpha_a from \"../../Assets/img/Angle_C4/a2_0003.png\";\r\nimport alpha_K from \"../../Assets/img/Angle_C4/K1_0003.png\";\r\nimport alpha_4 from \"../../Assets/img/Angle_C4/4_0003.png\";\r\nimport alpha_i from \"../../Assets/img/Angle_C4/_Semicolon0003.png\";\r\nimport alpha_r from \"../../Assets/img/Angle_C4/r2_0003.png\";\r\nimport alpha_j from \"../../Assets/img/Angle_C4/j2_0003.png\";\r\nimport alpha_dot from \"../../Assets/img/Angle_C4/_Period0003.png\";\r\nimport alpha_1 from \"../../Assets/img/Angle_C4/1_0003.png\";\r\nimport alpha_and from \"../../Assets/img/Angle_C4/_Ampersand0003.png\";\r\nimport alpha_m from \"../../Assets/img/Angle_C4/m2_0003.png\";\r\nimport alpha_Q from \"../../Assets/img/Angle_C4/Q1_0003.png\";\r\n\r\nimport {\r\n  aMotion,\r\n  kMotion,\r\n  fourMotion,\r\n  iMotion,\r\n  oneMotion,\r\n  rMotion,\r\n  zMotion,\r\n  QMotion,\r\n  andMotion,\r\n  mMotion,\r\n  jMotion,\r\n  dotMotion,\r\n} from \"../Login/AlphaAnimation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signIn } from \"../../redux/actions/authActions\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\r\n      {\"Copyright © MartechLabs \"}\r\n      {/* <Link color=\"inherit\" href=\"#\">\r\n          Logistio\r\n        </Link>{' '} */}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    marginBottom: theme.spacing(5),\r\n    width: 200,\r\n    height: 50,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    background: \"#6A7BFF\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      background: \"#6A7BFF\",\r\n    },\r\n    borderRadius: \"0px\",\r\n  },\r\n  loader: {\r\n    margin: \"10px 50% 10px\",\r\n    textAlign: \"center\",\r\n    color: \"#6A7BFF\",\r\n  },\r\n  txtInput: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"grey\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"black\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"black\",\r\n      },\r\n    },\r\n  },\r\n}));\r\nfunction Signup() {\r\n    const [email, setemail] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector((state) => state.notifyReducer.loading);\r\n    const success = useSelector((state) => state.notifyReducer.success);\r\n    const history = useHistory();\r\n    const [typePass, settypePass] = useState(false);\r\n    console.log(loading);\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      var loginFormData = new FormData();\r\n      loginFormData.append(\"email\", email);\r\n      loginFormData.append(\"password\", password);\r\n      dispatch(signIn(loginFormData));\r\n    };\r\n  \r\n    useEffect(() => {\r\n      if (success) {\r\n        history.replace(\"/home\");\r\n      }\r\n    }, [history, success]);\r\n  \r\n    return (\r\n      <div>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n  \r\n          <CustomSnackbar content=\"Ops, Wrong user credentials !\" type=\"error\" />\r\n  \r\n          <CustomSnackbar content=\"An email has been sent!\" type=\"success\" />\r\n  \r\n          <CustomSnackbar content=\"Ops, Something Wrong!\" type=\"error\" />\r\n  \r\n          <Grid item md={6} className=\"imgContainer\">\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n              <motion.img\r\n                draggable={false}\r\n                variants={aMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_a}\r\n              />\r\n  \r\n              <motion.img\r\n                draggable={false}\r\n                variants={kMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_K}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={fourMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_4}\r\n              />\r\n            </Grid>\r\n  \r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n              <motion.img\r\n                draggable={false}\r\n                variants={iMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_i}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={rMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_r}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={jMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_j}\r\n              />\r\n            </Grid>\r\n  \r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <motion.img\r\n                draggable={false}\r\n                variants={jMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                style={{ marginRight: \"130px\" }}\r\n                src={alpha_j}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={oneMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                style={{ marginRight: \"130px\" }}\r\n                src={alpha_1}\r\n              />\r\n            </Grid>\r\n  \r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n              <motion.img\r\n                draggable={false}\r\n                variants={fourMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_4}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={dotMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_dot}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={kMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_K}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n              sm={12}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <motion.img\r\n                draggable={false}\r\n                variants={QMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_Q}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={andMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_and}\r\n              />\r\n              <motion.img\r\n                draggable={false}\r\n                variants={mMotion}\r\n                animate=\"animateAlpha\"\r\n                width=\"130\"\r\n                src={alpha_m}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={6}\r\n            component={Paper}\r\n            elevation={0}\r\n            square\r\n            style={{\r\n              padding: \"50px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <motion.div initial=\"hidden\" animate=\"visible\" className={classes.paper}>\r\n              <Avatar className={classes.avatar} src={logo} variant=\"square\" />\r\n              <Typography\r\n                variant=\"span\"\r\n                style={{ alignSelf: \"center\", fontSize: \"15px\", fontWeight: 100 }}\r\n              ></Typography>\r\n              <Grid item md={6}>\r\n                <form className={classes.form} noValidate>\r\n                  <TextField\r\n                    variant=\"standard\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"userName\"\r\n                    label=\"Email Address\"\r\n                    name=\"userName\"\r\n                    autoComplete=\"userName\"\r\n                    autoFocus\r\n                    className={classes.txtInput}\r\n                    value={email}\r\n                    onChange={(e) => setemail(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"standard\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={typePass ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    className={classes.txtInput}\r\n                    value={password}\r\n                    onChange={(e) => setpassword(e.target.value)}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment\r\n                          position=\"end\"\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={() => settypePass(!typePass)}\r\n                        >\r\n                          {typePass ? (\r\n                            <VisibilityOutlinedIcon color=\"disabled\" size=\"small\" />\r\n                          ) : (\r\n                            <VisibilityOffOutlinedIcon color=\"disabled\" size=\"small\" />\r\n                          )}\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n  \r\n                  <motion.span\r\n                    whileHover={{ color: \"#6A7BFF\" }}\r\n                    style={{\r\n                      color: \"#c4c4c4\",\r\n                      fontSize: \"13px\",\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    Forgot Password\r\n                  </motion.span>\r\n                  {!loading && (\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      className={classes.submit}\r\n                      onClick={(e) => handleSubmit(e)}\r\n                    >\r\n                      Log in\r\n                    </Button>\r\n                  )}\r\n                  {loading && <CircularProgress size={24} className={classes.loader} />}\r\n                  <Box mt={5}>\r\n                    <Copyright />\r\n                  </Box>\r\n                </form>\r\n              </Grid>\r\n            </motion.div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Signup;","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\index.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Auth.js",["642"],"// this class contai all the logique that i use while signin and logout and while checking if the token still valid or not\n// i use it on Signin.js - ProtectedRoute.js\n\nimport Swal from 'sweetalert2'\nimport { uri } from \"./Url_base\";\nimport axios from \"axios\";\nimport jwt from 'jsonwebtoken'\n\n\nclass Auth {\n  constructor() {\n    this.authenticated = false\n  }\n\n  login(inputsValue, setter, status, open, cb) {\n    console.log(\"[Debug] Input Values\", inputsValue);\n    var loginFormData = new FormData();\n    loginFormData.append(\"email\", inputsValue.email);\n    loginFormData.append(\"password\", inputsValue.password);\n    axios({\n      method: 'POST',\n      url: `${uri.link}/login`,\n      data: loginFormData,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(res => {\n\n        if (res.status === 200) {\n          setter(false)\n          console.log('here token', res)\n          if (res.data && res.data.token) {\n            this.authenticated = true;\n            cb(res.data.token)\n          }\n        }\n\n      })\n\n      .catch(err => {\n        setter(false)\n        console.log('error', err);\n        open(true);\n        status(\"error\");\n        // Swal.fire({\n        //   icon: 'error',\n        //   title: 'Oops...',\n        //   text: `${err.response.data.message && err.response.status===401 ? err.response.data.message:'Something went wrong!'}`,\n        // })\n\n      })\n\n  }\n\n\n\n  logout(his) {\n    axios({\n      method: 'post',\n      url: `${uri.link}/logout`,\n      headers: { 'auth-token': window.localStorage.getItem('plumaT') }\n    })\n      .then(res => {\n\n        window.localStorage.setItem('erpT', 'expired');\n        window.location.replace('/')\n\n      })\n\n  }\n\n\n\n\n  isAuthenticated() {\n    let token = window.localStorage.getItem('plumaT');\n    let user = {};\n    let value = false;\n    if (token !== 'expired') {\n      user = jwt.decode(token);\n    }\n\n    var current_time = Date.now() / 1000;\n    if (user && Object.keys(user).length > 0) {\n      console.log('user here :::::>', user)\n      if (user.exp < current_time)\n        value = false;\n      else\n        value = true\n    }\n    else {\n      value = false\n    }\n\n    return value\n\n    // await axios.get(uri.link+\"user/me\",{\n\n    //       headers:{\n    //         'Authorization':`Bearer ${window.localStorage.getItem(\"token\")}`}\n    //       })\n    //         .then(res=>{\n\n    //        window.localStorage.setItem(\"erpT\",'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjEwMDU3NzY0LCJqdGkiOiI0MWQ5N2QzNmI2NjE0YmM3OTk2ZDg3ODcxOTc1MmY2NSIsInVzZXJuYW1lIjoicm9vdCJ9.obR0uJ2owtJFypNwh6qSHyzEnPFgZSlKEkOi9KGTPTA')\n\n    //         })\n    //         .catch(err=>{\n    //           window.localStorage.setItem(\"erpT\",'')\n    //         })\n\n\n  }\n\n\n}\n\nexport default new Auth()","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Url_base.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Login\\AlphaAnimation.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Hooks\\useGetUser.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Hooks\\useToken.js",["643"],"//  return the token from the local storage\n\n\nimport React from 'react'\nfunction useToken() {\n    const token = window.localStorage.getItem('erpT')\n    const setToken = (givenToken)=>{\n        return  window.localStorage.setItem('erpT',givenToken)\n        \n    }\n    const getToken = ()=>{\n        return token\n    }\n    return [setToken,getToken]  \n}\n\nexport default useToken","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Selectors\\UserSelector.js",["644","645","646","647"],"import {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n  } from 'recoil';\nimport {userState} from '../Atoms/Atoms'\n\n\n\nexport const updateUser = selector({\n  key:'getInformation',\n  get:({get})=>{\n    let info = {};\n    const user = get(userState);\n    info.fullname=user.fullname;\n    info.password=user.password;\n    info.email=user.email;\n\n    return info\n  }\n})","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Atoms\\Atoms.js",["648","649","650","651"],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\userReducer.js",["652","653"],"import { user } from \"../actions\";\r\nimport { USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,  USER_UPDATE_PROFILE_RESET,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  loading: false,\r\n    users: [],\r\n    errors: {}\r\n  };\r\n\r\n \r\n/*export default function authReducer(state = initialState, action={}) {\r\n    switch (action.type) {\r\n      case 'UPDATE_CONTACT_PENDING': {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n  \r\n      case 'UPDATE_CONTACT_FULFILLED': {\r\n        const contact = action.payload.data;\r\n        return {\r\n          ...state,\r\n          users: state.users.map(item => item._id === user._id ? user : item),\r\n          errors: {},\r\n          loading: false\r\n        }\r\n      }\r\n  \r\n      case 'UPDATE_CONTACT_REJECTED': {\r\n        const data = action.payload.response.data;\r\n        const { \"name.first\":firstname, \"name.last\":lastname } = data.errors;\r\n        const errors = { global: data.message, name: { firstname,lastname }};\r\n        return {\r\n          ...state,\r\n          errors: errors,\r\n          loading: false\r\n        }\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }*/\r\n  export default function userUpdateProfileReducer (state = {}, action){\r\n    switch (action.type) {\r\n      case USER_UPDATE_PROFILE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_PROFILE_SUCCESS:\r\n        return { loading: false, success: true, token: action.payload }\r\n      case USER_UPDATE_PROFILE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_PROFILE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SnackBars\\CustomSnackBar.js",["654","655"],"// my custom SnackBar\n// i use it for erro or success msg display\n// on every api call or somthing like that\n\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomSnackbar({content,type,open,setter}) {\n  const classes = useStyles();\n\n  // const handleClick = () => {\n  //   setOpen(true);\n  // };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setter(false);\n  };\n\n  return (\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}>\n        <Alert onClose={handleClose} severity={type} >\n          {content}\n        </Alert>\n       </Snackbar>\n      /* <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert>  */\n  );\n}","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\TopBar\\CustomTopBar.js",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671"],"// this component is BIG\n// conatin the top bar\n// contain the side bar ( sections )\n// The switch ( ReactRouterDom ) that handle the models Forms is called here too\n // also mobile dibe bar is here u need to make changes on it \n // section means SingleAccording check the component under ./SideBar/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {userState,workSpaceState,languagesState,resultsState} from '../../Atoms/Atoms'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport logo from '../../Assets/img/pluma logo/Logo.svg'\nimport '../../Assets/Css/TopBar.css'\nimport { motion } from 'framer-motion';\nimport Langue from '../Language Items/Langue';\nimport WorkspaceItem from '../Workspaces items/WorkspaceItem';\nimport {activeWorkspace} from '../../Selectors/WorkspaceSelector'\nimport CustomAccording from '../../Components/SideBar/CustomAccording'\nimport ProductForm from '../Product Section/ProductForm';\nimport { Switch, Route, Link,useLocation } from 'react-router-dom';\nimport Empty from '../Empty';\nimport { Grid } from '@material-ui/core';\nimport Result from '../Results/Result';\nimport FavoriteContainer from '../../Views/Favorite/FavoriteContainer';\nimport WorkspacesContainer from '../../Views/Workspaces/WorkspacesContainer';\nimport ProfileContainer from '../../Views/Profile/ProfileContainer';\nimport EmailForm from '../Email Section/Email Headlines/EmailForm';\nimport FacebookHeadLinesForm from '../Social ADS/Facebook Headlines/FacebookHeadLinesForm';\nimport FacebookLinkDescForm from '../Social ADS/Facebook Link Desc/FacebookLinkDescForm';\nimport FacebookPrimaryTextForm from '../Social ADS/Facebook Primary Text/FacebookPrimaryTextForm';\nimport GoogleDescriptionForm from '../Social ADS/Google Description/GoogleDescriptionForm';\nimport GoogleHeadlinesForm from '../Social ADS/Google Headlines/GoogleHeadlinesForm';\nimport AidaForm from '../SalesCopy/AIDA/AidaForm';\nimport BABForm from '../SalesCopy/Before After bridge/BABForm';\nimport EmoAnglesForm from '../SalesCopy/Emotional angles/EmoAnglesForm';\nimport FABForm from '../SalesCopy/Feature advantage benefit/FABForm';\nimport FTBForm from '../SalesCopy/Feature to benefits/FTBForm';\nimport FunctionalBenefitForm from '../SalesCopy/Functional benefits/FunctionalBenefitForm';\nimport MarketingAnglesForm from '../SalesCopy/Marketing angles/MarketingAnglesForm';\nimport PASForm from '../SalesCopy/Pain agitate solution/PASForm';\nimport PPPForm from '../SalesCopy/Problem promise proof/PPPForm';\nimport BlogIntroForm from '../WebsitesCopy/BlogIntro/BlogIntroForm';\nimport ListiclesForm from '../WebsitesCopy/Listicles/ListiclesForm';\nimport BlogPostForm from '../SEO/BlogPosts/BlogPostForm';\nimport HomePageForm from '../SEO/HomePage/HomePageForm';\nimport ProductPageForm from '../SEO/ProductPage/ProductPageForm';\nimport ServicePageForm from '../SEO/ServicesPage/ServicePageForm';\nimport ContentImproverForm from '../WebsitesCopy/ContentImprover/ContentImproverForm';\nimport SentenceExpanderForm from '../WebsitesCopy/SentenceExpander/SentenceExpanderForm';\nimport InstagramCaptionForm from '../Social ADS/InstagramCaptions/InstagramCaptionForm';\nimport ValuePropositionForm from '../Brainstorming/Value proposition/ValuePropositionForm';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport  { useEffect } from \"react\";\nimport { logout } from '../../redux/actions/authActions';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingTop:'5px',\n    height:'100vh'\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  logo_large: {\n    width: '210px',\n    padding:'15px',\n    height: theme.spacing(10),\n    marginLeft:'18px'\n\n  \n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: '100%',\n      marginLeft: drawerWidth,\n      background:'white',\n      height:'85px',\n        boxShadow:'0px 3px 5px 0px rgba(234 ,235, 239, .7)',\n    //   borderBottom:'1px solid #C4C4C4'\n    zIndex:9999\n  \n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n\n  \n  },\n  drawerPaperWeb: {\n    width: drawerWidth,\n    marginTop:'85px',\n    paddingTop:'75px',\n    border:'none',\n    overflowY:'auto',\n    maxHeight:'88vh'\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    background:'rgb(245,246,250)',\n    paddingTop:'84px',\n    flexDirection:'row',\n    display:\"flex\"\n\n  },\n}));\n\nfunction CustomTopBar(props) {\n\n  let location=useLocation();\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const currentWorkspace= useRecoilValue(activeWorkspace);\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [isMenuOpen, setisMenuOpen] = React.useState(null)\n  const [isProfileMenu, setisProfileMenuOpen] = React.useState(null)\n  const [isInputMenuOpen, setisInputMenuOpen] = React.useState(null)\n  const [isOutputMenuOpen, setisOutputMenuOpen] = React.useState(null)\n\n  const [user,setUser] = useRecoilState(userState);\n  const [workSpace,setWorkSpace] = useRecoilState(workSpaceState);\n  const [languages,setLanguages] = useRecoilState(languagesState);\n  const [resultsStatus,setResultsStatus] = useRecoilState(resultsState);\n\n\n  const [activeLanguages,setActiveLanguages] = React.useState({\n      input:'English',\n      output:'English'\n  });\n\n\n  console.log(location.pathname)\n\n  const handleWorkeSpaces = (v)=>{\n      let wrong = [];\n       workSpace.map(elem=>{\n          if(elem.name!==v){\n                wrong.push(workSpace.indexOf(elem))\n          }\n      })\n    const elementsIndex =workSpace.findIndex(element => element.name == v );\n    let newArray = [...workSpace];\n    newArray[elementsIndex] = {...newArray[elementsIndex], isActive: true};\n    wrong.map(i=>{\n        newArray[i] = {...newArray[i], isActive: false};\n    })\n    setWorkSpace(newArray)\n    setisMenuOpen(null);\n  }\n\n\n  const handleInputActiveLanguage = (v)=>{\n        setActiveLanguages({...activeLanguages,input:v})\n  }\n\n  const handleOutputActiveLanguage = (v)=>{\n    setActiveLanguages({...activeLanguages,output:v})\n}\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleMenuOpen = (event)=>{\n    setisMenuOpen(event.currentTarget)\n}\nconst handleMenuClose = ()=>{\n// auth.logout()\n    setisMenuOpen(null)\n}\n\nconst handleInputMenuOpen = (event)=>{\n    setisInputMenuOpen(event.currentTarget)\n}\nconst handleInputMenuClose = ()=>{\n// auth.logout()\n    setisInputMenuOpen(null)\n}\n\nconst handleOutputMenuOpen = (event)=>{\n    setisOutputMenuOpen(event.currentTarget)\n}\nconst handleOutputMenuClose = ()=>{\n// auth.logout()\n    setisOutputMenuOpen(null)\n}\n\nconst handleProfileMenuOpen = (event)=>{\n    setisProfileMenuOpen(event.currentTarget)\n}\nconst handleProfileMenuClose = ()=>{\n// auth.logout()\nsetisProfileMenuOpen(null)\n}\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n\n  const web_drawer = (\n    <div>\n\n      <div className={classes.toolbar_web} />\n\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text} onClick={()=>console.log('aaaa')}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  const _getuserName = ()=>{\n      let name = user.fullname.split(' ');\n      return `${name[0]}.${name[1][0]}`\n  }\n\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.notifyReducer.loading);\n  const success = useSelector((state) => state.notifyReducer.success);\n  const history = useHistory();\n  console.log(loading);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(logout());\n    console.log(\"logout\");\n  };\n    useEffect(() => {\n    if (success) {\n      history.replace(\"/\");\n    }\n     }, [history, success]);\n    \n  console.log('here results',resultsStatus);\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={classes.appBar}>\n        <Toolbar style={{paddingLeft:'0px',paddingRight:'0px'}} >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div style={{width:'100%',height:'85px',display:'flex',justifyContent:'flex-end'}}>\n            <section style={{width:'21%',flexDirection:'row',display:'flex',justifyContent:'flex-start',alignItems:'flex-start'}}>\n                      <Avatar variant=\"square\" src={logo} className={classes.logo_large} />\n\n            </section>\n            <section style={{width:'15%',flexDirection:'row',display:'flex',justifyContent:'flex-start',alignItems:'center'}}>\n                    \n\n            </section>\n          <section style={{width:'18%',flexDirection:'row',display:'flex',justifyContent:'center',alignItems:'center',color:'black',borderLeft:'2px solid rgb(246,246,246)'}}>\n                <span style={{color:isInputMenuOpen?'#6A7BFF':'#202020',display:'flex',alignItems:'center',cursor:'pointer'}} onClick={handleInputMenuOpen}>Input Language\n                {\n                    isInputMenuOpen?\n                    <ExpandLessIcon style={{marginLeft:'10px'}}/>\n                    :               \n                    <ExpandMoreIcon style={{marginLeft:'10px'}}/>\n                }\n                </span>\n\n                <Menu\n                        // anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                        id={'profile_menu'}\n                        keepMounted\n                        anchorEl={isInputMenuOpen}\n                        open={Boolean(isInputMenuOpen)}\n                        onClose={handleInputMenuClose}\n                        style={{marginTop:'60px',textAlign:'center'}}\n                        >\n                            {\n                                languages.map((elem,index)=>{\n                                   return  <Langue lang={elem} activeLangue={activeLanguages.input} handler={handleInputActiveLanguage} />\n\n                                   \n                                })\n                            }\n                       \n                        {/* <Divider variant=\"middle\" /> */}\n\n                    </Menu>\n                </section>\n                {/* <section  style={{width:'15%',flexDirection:'row',display:'flex',justifyContent:'center',alignItems:'center',color:'black',borderLeft:'2px solid rgb(246,246,246)'}}>\n                <span style={{color:isOutputMenuOpen?'#6A7BFF':'#202020',display:'flex',alignItems:'center',cursor:'pointer'}} onClick={handleOutputMenuOpen}>Output Language\n                {\n                    isOutputMenuOpen?\n                    <ExpandLessIcon style={{marginLeft:'10px'}} />\n                    :               \n                    <ExpandMoreIcon style={{marginLeft:'10px'}}/>\n                }\n\n                </span>\n\n                <Menu\n                        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                        id={'profile_menu'}\n                 \n                        keepMounted\n                        anchorEl={isOutputMenuOpen}\n                        open={Boolean(isOutputMenuOpen)}\n                        onClose={handleOutputMenuClose}\n                        style={{marginTop:'60px',textAlign:'center'}}\n                        >\n                            {\n                                languages.map((elem,index)=>{\n                                    return  <Langue lang={elem} activeLangue={activeLanguages.output} handler={handleOutputActiveLanguage} />\n                                }\n                                )}\n                       \n                        <Divider variant=\"middle\" />\n\n                    </Menu>\n                </section> */}\n                <section   style={{width:'13%',flexDirection:'row',display:'flex',justifyContent:'center',alignItems:'center',color:'#202020',borderLeft:'2px solid rgb(246,246,246)',cursor:'pointer'}}>\n                    <Link to='/home/favorite' style={{textDecoration:'none'}} whileHover={{ color: \"#6A7BFF\" }}  ><motion.span whileHover={{ color: \"#6A7BFF\" }} style={{color:'#202020'}}>Favorite List</motion.span></Link>\n                </section>\n                <section style={{width:'18%',flexDirection:'row',display:'flex',justifyContent:'center',alignItems:'center',borderLeft:'2px solid rgb(246,246,246)'}}>\n                <span style={{color:'#6A7BFF',display:'flex',alignItems:'center',fontWeight:'bold',cursor:'pointer'}} onClick={handleMenuOpen}>{currentWorkspace.name}\n                {\n                    isMenuOpen?\n                    <ExpandLessIcon style={{marginLeft:'10px'}}/>\n                    :               \n                    <ExpandMoreIcon style={{marginLeft:'10px'}}/>\n                }\n                </span>\n\n                    <Menu\n                        // anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                        id={'profile_menu'}\n                        keepMounted\n                        anchorEl={isMenuOpen}\n                        open={Boolean(isMenuOpen)}\n                        onClose={handleMenuClose}\n                        style={{marginTop:'60px',textAlign:'center'}}\n                        >\n                            {\n                                workSpace.map((elem,index)=>{\n                                   return  index===workSpace.length-1?\n                                    <WorkspaceItem workspace={elem} handler={handleWorkeSpaces} />\n                                    :\n                                    <WorkspaceItem workspace={elem} divider handler={handleWorkeSpaces}/>\n                                })\n                            }\n                       \n                        {/* <Divider variant=\"middle\" /> */}\n\n                    </Menu>\n\n                </section>\n                <section style={{width:'18%',flexDirection:'row',display:'flex',justifyContent:'center',alignItems:'center',borderLeft:'2px solid rgb(246,246,246)'}}>\n                    <Avatar variant=\"square\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Felix_Cat-Haha.svg/1200px-Felix_Cat-Haha.svg.png\" className={classes.large} />\n                    <span style={{textTransform:'capitalize',color:isProfileMenu?'#6A7BFF':'#202020',display:'flex',alignItems:'center',cursor:'pointer'}} onClick={handleProfileMenuOpen}>\n                        {_getuserName()}\n                        {\n                    isProfileMenu?\n                    <ExpandLessIcon style={{marginLeft:'10px'}}/>\n                    :               \n                    <ExpandMoreIcon style={{marginLeft:'10px'}}/>\n                }\n                        </span>\n                    \n              \n                    <Menu\n                        // anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                        id={'profile_menu'}\n                        keepMounted\n                        anchorEl={isProfileMenu}\n                        open={Boolean(isProfileMenu)}\n                        onClose={handleProfileMenuClose}\n                        style={{marginTop:'70px',textAlign:'center'}}>\n                                    <Link to='/home/profile' onClick={handleProfileMenuClose} style={{textDecoration:'none'}}>\n                                      <MenuItem  onClick={handleProfileMenuClose} style={{width:'150px',textAlign:'center',fontSize:'13px',display:\"flex\",justifyContent:'center',color:'white'}} >Profile</MenuItem>\n                                    </Link>\n                                    <Divider variant=\"middle\" style={{background:'white'}} />\n                                    <Link to='/home/workspaces' onClick={handleProfileMenuClose} style={{textDecoration:'none'}}>\n                                      <MenuItem style={{width:'150px',textAlign:'center',fontSize:'13px',display:\"flex\",justifyContent:'center',color:'white'}} >Workspaces</MenuItem>\n                                    </Link>\n                                    <Divider variant=\"middle\" style={{background:'white'}} />\n                                    <MenuItem  onClick={(e) => handleSubmit(e)}  style={{width:'150px',textAlign:'center',fontSize:'13px',display:\"flex\",justifyContent:'center',color:'white'}} >Logout</MenuItem>    \n                       \n                        {/* <Divider variant=\"middle\" /> */}\n\n                    </Menu>\n                </section> \n          </div>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        \n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n             {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaperWeb,\n            }}\n            variant=\"permanent\"\n            open\n          >\n           <CustomAccording />\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {\n          location.pathname==='/home/profile' && \n          <Grid item md={12} xs ={12} style={{height:'100%',overflowY:'auto'}}>\n              <ProfileContainer />\n          </Grid>\n        }\n        {\n          location.pathname==='/home/workspaces' && \n          <Grid item md={12} xs ={12} style={{height:'100%',overflowY:'auto'}}>\n              <WorkspacesContainer />\n          </Grid>\n        }\n        {\n          location.pathname==='/home/favorite' && \n          <Grid item md={12} xs ={12} style={{height:'100%',overflowY:'auto'}}>\n            <FavoriteContainer />\n          </Grid>\n        }\n          {\n          location.pathname==='/home' && \n          <>\n          <Empty />\n          </>\n        }\n        {\n            location.pathname!=='/home/profile' &&  location.pathname!=='/home/workspaces' && location.pathname!=='/home/favorite' && location.pathname!=='/home' && \n          <>\n            <Grid item md={6} xs ={12} style={{height:'100%',overflowY:'auto'}}>\n                          <Switch>\n                                <Route path='/home/product_description' component={()=> <ProductForm languages={activeLanguages} />}/>\n                                <Route path='/home/emailheadlines' component={()=> <EmailForm languages={activeLanguages} />}/>\n                                <Route path='/home/facebookheadlines' component={()=><FacebookHeadLinesForm languages={activeLanguages} />}/>\n                                <Route path='/home/facebooklinkdesc' component={()=> <FacebookLinkDescForm languages={activeLanguages}/>}/>\n                                <Route path='/home/facebookprimarytext' component={()=> <FacebookPrimaryTextForm languages={activeLanguages}/>}/>\n                                <Route path='/home/googledescription' component={()=> <GoogleDescriptionForm languages={activeLanguages} />}/>\n                                <Route path='/home/googleheadlines' component={()=> <GoogleHeadlinesForm languages={activeLanguages} />}/>\n                                <Route path='/home/aida' component={()=><AidaForm languages={activeLanguages} />} />\n                                <Route path='/home/bab' component={()=><BABForm languages={activeLanguages} />}/>\n                                <Route path='/home/emotionalAngles' component={()=><EmoAnglesForm languages={activeLanguages} />}/>\n                                <Route path='/home/featureAdvantageBenefit' component={()=><FABForm languages={activeLanguages} />}/>\n                                <Route path='/home/featureToBenefits' component={()=><FTBForm languages={activeLanguages} />}/>\n                                <Route path='/home/functionalBenifit' component={()=><FunctionalBenefitForm languages={activeLanguages} />}/>\n                                <Route path='/home/marketingAngles' component={()=> <MarketingAnglesForm languages={activeLanguages} />}/>\n                                <Route path='/home/PASolution' component={()=> <PASForm languages={activeLanguages}/>}/>\n                                <Route path='/home/Ppp' component={()=> <PPPForm languages={activeLanguages} />}/>\n                                <Route path='/home/blogIntro' component={()=> <BlogIntroForm languages={activeLanguages} />}/>\n                                <Route path='/home/listicles' component={()=> <ListiclesForm languages={activeLanguages} />}/>\n                                <Route path='/home/blogPost' component={()=> <BlogPostForm languages={activeLanguages} />}/>\n                                <Route path='/home/homePage' component={()=> <HomePageForm languages={activeLanguages} />}/>\n                                <Route path='/home/productPage' component={()=> <ProductPageForm languages={activeLanguages} />}/>\n                                <Route path='/home/servicesPage' component={()=> <ServicePageForm languages={activeLanguages} />}/>\n                                <Route path='/home/contentImprover' component={()=> <ContentImproverForm languages={activeLanguages} />}/>\n                                <Route path='/home/sentenceExpander' component={()=> <SentenceExpanderForm languages={activeLanguages} />}/>\n                                <Route path='/home/instagramCaption' component={()=> <InstagramCaptionForm languages={activeLanguages} />}/>\n                                <Route path='/home/valueProposition' component={()=> <ValuePropositionForm languages={activeLanguages} />}/>\n\n\n\n\n                          </Switch>\n            </Grid>\n            <Grid item md={6} xs ={12} style={{height:'100%',overflowY:'auto'}}>\n              {\n                resultsStatus.display && \n                <Result />\n              }\n            </Grid>\n          </>\n        }\n      \n       \n       \n   \n      </main>\n    </div>\n  );\n}\n\nCustomTopBar.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default CustomTopBar;\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\notifyReducer.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\types.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Empty.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Selectors\\WorkspaceSelector.js",["672","673","674","675"],"import {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n  } from 'recoil';\n\n  import {workSpaceState} from '../Atoms/Atoms'\n\n\n\nexport const activeWorkspace = selector({\n    key:'activeWorkspace',\n    get:({get})=>{\n      const workspaces = get(workSpaceState);\n      let current = workspaces.filter(elem=>elem.isActive===true)[0];\n      return current \n    }\n    \n  })\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Workspaces\\WorkspacesContainer.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Profile\\ProfileContainer.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Favorite\\FavoriteContainer.js",["676"],"// all logique must be here to share with Favorite component (display component)\n// data must be changed to the data from the backend api check with Amira\n\nimport { Container } from '@material-ui/core'\nimport React from 'react'\nimport Favorite from './Favorite'\n\nfunction FavoriteContainer() {\n\n\n    const data = [\n        { \n            content:'ahahahhahahha hahahhaahah ahhahahhaha hahhaahahahhahahhahah ahhaahahahhahahhaha ahahhahahhahahah haahahahhahahhah ahahha hahhaahahahhahahhahah ahhaahahahhahahhaha ahahhahahhahahah hahhaahahahhahahhahah ahhaahahahhahahhaha ahahhahahhahahah hahhaahahahhahahhahah ahhaahahahhahahhaha ahahhahahhahahah 1'\n        },\n        {\n            content:'hohoohohoh hohoohohoh hohoohohohhohoohohoh hohoohohohhohoohohohhoho ohohohhohoohohoh hohoohoh ohhohoohohohhohoohohoh 2'\n        },\n        {\n            content:'hehehehehehe hehehehehehe heheheheheheheheheh ehehehehehehehehe 3'\n        },\n        { \n            content:'ahahahhahahha hahahhaahah ahhahahhaha hahhaahahahhahahhahah ahhaahahahhahahhaha hahhaahahahhahahhahahahha ahahahhahahhahahahhaah ahahhahahhahahah haahahahhahahhah ahahha 4'\n        },\n        {\n            content:'hohoohohoh hohoohohoh hohoohohohhohoohohoh hohoohohohhohoohohohhoho ohohohhohoohohoh hohoohoh ohhohoohohohhohoohohoh 5'\n        },\n        {\n            content:'hehehehehehe hehehehehehe heheheheheheheheheh ehehehehehehehehe 6'\n        },\n        {\n            content:'hehehehehehe hehehehehehe heheheheheheheheheh ehehehehehehehehe 7'\n        }\n    ]\n\n\n    return (\n        <Favorite data={data} />\n    )\n}\n\nexport default FavoriteContainer\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Results\\Result.js",["677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"// results UI \n// this component render the card that contain the text genereated by pluma\n// check <CustomCard> component\n\n\nimport React from 'react'\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport CustomCard from './CustomCard'\nimport Pagination from '@material-ui/lab/Pagination';\nimport { usePagination } from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../Atoms/Atoms'\n\nconst useStyles = makeStyles({\n    ul: {\n      listStyle: 'none',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      justifyContent:'center'\n    },\n  });\nfunction Result() {\n    const classes = useStyles();\n\n    const [page, setpage] = React.useState(1);\n    const [pagesCount, setpageCount] = React.useState(0);\n    const [itemsToDisplay, setitemsToDisplay] = React.useState([{}]);\n    const [results,setResults] = useRecoilState(resultsState);\n\n    const { items } = usePagination({\n        count: pagesCount,\n      });\n    // const getItems_ = (p)=>{\n    //     let res = [];\n    //     let end = (p*3)>data.length?data.length:p*3;\n    //     let start = end-p;\n    //     if(p>1){\n    //     for (let index = start; index <= end; index++) {\n    //         res.push(data[index])\n    //     }\n    // }\n    // else{\n    //     for (let index = 0; index < 3; index++) {\n    //         res.push(data[index])\n    //     }\n    // }\n    //     return res;\n    // };\n\n    \n    const handlePageChange = (p)=>{\n        setpage(p);\n        // setitemsToDisplay(getItems_(p));\n    }\n\n\n    // const itemsToDisplay = ()=>{\n    //         return getItems_();\n    // } \n    const data = [\n        { \n            content:'ahahahhahahha hahahhaahah ahhahahhaha hahhaahahahhahahhahah ahhaahahahhahahhaha ahahhahahhahahah haahahahhahahhah ahahha 1'\n        },\n        {\n            content:'hohoohohoh hohoohohoh hohoohohohhohoohohoh hohoohohohhohoohohohhoho ohohohhohoohohoh hohoohoh ohhohoohohohhohoohohoh 2'\n        },\n        {\n            content:'hehehehehehe hehehehehehe heheheheheheheheheh ehehehehehehehehe 3'\n        },\n        { \n            content:'ahahahhahahha hahahhaahah ahhahahhaha hahhaahahahhahahhahah ahhaahahahhahahhaha hahhaahahahhahahhahahahha ahahahhahahhahahahhaah ahahhahahhahahah haahahahhahahhah ahahha 4'\n        },\n        {\n            content:'hohoohohoh hohoohohoh hohoohohohhohoohohoh hohoohohohhohoohohohhoho ohohohhohoohohoh hohoohoh ohhohoohohohhohoohohoh 5'\n        },\n        {\n            content:'hehehehehehe hehehehehehe heheheheheheheheheh ehehehehehehehehe 6'\n        },\n        {\n            content:'hehehehehehe hehehehehehe heheheheheheheheheh ehehehehehehehehe 7'\n        }\n    ]\n    React.useEffect(() => {\n            setpageCount(Math.ceil(data.length/3));\n           \n    }, [data]);\n  \n\nconst _minusPage = (p)=>{\n    console.log('page------>',p)\n}\nconst _addPage = ()=>{\n    \n}\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px',height:'100%'}}>\n       <div style={{background:'white',marginTop:'0px',padding:'5px',display:'flex',flexDirection:'column',background:'rgb(245,246,250)'}}>\n            {\n                results.data && typeof results.data=='object' ?\n                results.data.map((elem,index)=>{\n                    return <CustomCard index={index+1} content={elem} />\n                })\n                :\n                <span style={{color:'white',fontWeight:'bold',fontSize:'15px',background:'#ff0033',padding:'10px',textAlign:'center'}}>{results.data}</span>\n            }\n            {/* <Pagination count={pagesCount} shape=\"rounded\"  style={{alignSelf:'center'}} onChange={(e,page)=>{handlePageChange(page)}} page={page}/> */}\n            {/* <nav>\n      <ul className={classes.ul}>\n        {items.map(({ page, type, selected, ...item }, index) => {\n          let children = null;\n\n          if (type === 'start-ellipsis' || type === 'end-ellipsis') {\n            children = '…';\n          } else if (type === 'page') {\n            children = (\n              <button type=\"button\" style={{ paddingLeft:'10px',paddingRight:'10px',outline:'none',color: selected ? '#6A7BFF' : '#cfcfcf' , fontWeight:'bold',border:'none',background:'transparent',borderBottom:selected ?'2px solid #6A7BFF':'none'}} {...item}>\n                {page}\n              </button>\n            );\n          } else {\n            children = (\n            \n                type==='next'?<RightIcon onClick={(e,p)=>_minusPage(p)}  {...item}style={{width:20,height:24,fill:'#6A7BFF',marginLeft:'20px'}} />:<LeftIcon  onClick={()=>_minusPage(page)} {...item} style={{width:20,height:24,fill:'#6A7BFF',marginRight:'20px'}}/>\n         \n            );\n          }\n\n          return <li key={index}>{children}</li>;\n        })}\n      </ul>\n    </nav> */}\n       </div>\n       \n</Grid>\n    )\n}\n\nexport default Result\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SideBar\\CustomAccording.js",["696","697","698","699","700"],"// this component contain a SingleAccording \n// every singleAccording have an array that display each  section model\n\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SingleAccording from './SingleAccording';\n\nconst Accordion = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: 'white',\n\n    marginBottom: -0,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n\n  },\n}))(MuiAccordionDetails);\n\nexport default function CustomAccording() {\n  const [expanded, setExpanded] = React.useState('');\n  const [activePath, setactivePath] = React.useState('')\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const activePathSetter = (path)=>{\n    setactivePath(path);\n    window.localStorage.setItem('activePath',path)\n  }\n\n  return (\n    <div>\n      <SingleAccording expanded={expanded} handleChange={handleChange} name='panel1' content={{name:'Email & letters',options:[{name:'Email Headlines',link:'/emailheadlines'}]}} activePath={activePath} setter={activePathSetter} />\n\n      <SingleAccording expanded={expanded} handleChange={handleChange} name='panel2' content={{name:'Products',options:[{name:'Product Descriptions',link:'/product_description'}]}} activePath={activePath} setter={activePathSetter}/>\n\n      <SingleAccording expanded={expanded} handleChange={handleChange} name='panel3' content={{name:'Social ADS',options:[{name:'Facebook Headlines',link:'/facebookheadlines'},{name:'Facebook Link Desc..',link:'/facebooklinkdesc'},{name:'Facebook Primary Text',link:'/facebookprimarytext'},{name:'Google Description',link:'/googledescription'},{name:'Google Headlines',link:'/googleheadlines'},{name:'Instagram Captions',link:'/instagramCaption'}]}} activePath={activePath} setter={activePathSetter}/>\n\n      <SingleAccording expanded={expanded} handleChange={handleChange} name='panel4' content={{name:'Sales Copy',options:[{name:'AIDA',link:'/aida'},{name:'Before After Bridge',link:'/bab'},{name:'Emotional Angles',link:'/emotionalAngles'},{name:'Feature Advantage Benefit',link:'/featureAdvantageBenefit'},{name:'Feature To Benefit',link:'/featureToBenefits'},{name:'Functional Benifit',link:'/functionalBenifit'},{name:'Marketing Angles',link:'/marketingAngles'},{name:'Pain Agitate Solution',link:'/PASolution'},{name:'Problem Promise Proof',link:'/Ppp'}]}} activePath={activePath} setter={activePathSetter}/>\n      \n      <SingleAccording expanded={expanded} handleChange={handleChange} name='panel5' content={{name:'Websites Copy',options:[{name:'Blog Introduction',link:'/blogIntro'},{name:'Listicles',link:'/listicles'},{name:'Content Improver',link:'/contentImprover'},{name:'Sentence Expander',link:'/sentenceExpander'}]}} activePath={activePath} setter={activePathSetter} />\n      \n      <SingleAccording expanded={expanded} handleChange={handleChange} name='panel6' content={{name:'Brainstorming',options:[{name:'Value Proposition',link:'/valueProposition'}]}} activePath={activePath} setter={activePathSetter} />\n\n      <SingleAccording expanded={expanded} handleChange={handleChange} name='panel7' content={{name:'SEO',options:[{name:'Blog Post',link:'/blogPost'},{name:'Home Page',link:'/homePage'},{name:'Product Page',link:'/productPage'},{name:'Services Page',link:'/servicesPage'}]}} activePath={activePath} setter={activePathSetter} />\n\n    </div>\n  );\n}\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Workspaces items\\WorkspaceItem.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Product Section\\ProductForm.js",["701","702","703","704","705"],"// Product desc  model Form\n// the post call is here too \n// everything related to this model is here\n\n\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../Atoms/Atoms'\nimport { getActiveTone } from \"../../Selectors/TonesSelector\";\nimport VoiceToneList from '../Voice tone/VoiceToneList';\n\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n    \n        default:\n            return state;\n    }\n}\nfunction ProductForm({languages}) {\n\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [loading, setloading] = React.useState(false)\n    const [results,setResults] = useRecoilState(resultsState);\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/product/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n        \n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>product description</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput  v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea  v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput  v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default ProductForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Language Items\\Langue.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Brainstorming\\Value proposition\\ValuePropositionForm.js",["706","707","708","709","710","711","712","713","714","715","716","717"],"// VlauePrposition model Form\n// the post call is here too \n// everything related to this model is here\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction ValuePropositionForm({languages}) {\n    const [loading, setloading] = React.useState(false)\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n    const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            description:formValue.desc,\n        };\n\n        let req = `${languages.input}/${formValue.desc}`\n        \n        // if(formValue.target.length>0)\n        //     req = `${req}/${formValue.target}`\n\n        // if(formValue.occasion.length>0)\n        //     req =`${req}/${formValue.occasion}`\n        \n        // if(formValue.promotion.length>0)\n        //     req =`${req}/${formValue.promotion}`\n\n        // if(formValue.target.length>0)\n        //     body = {...body,target:formValue.target}\n\n        // if(formValue.occasion.length>0)\n        //     body = {...body,occasion:formValue.occasion}\n        \n        // if(formValue.promotion.length>0)\n        //     body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/ideas/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            // setResults({...results,});\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n            // window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Value Proposition</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center',borderRadius:'10px'}}>\n              {/* <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' /> */}\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n               {/* <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                              <VoiceToneList /> */}\n\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {/* {\n                    checked &&\n                    <div>\n                        <CustomInput name='target audience' placeholder='Ex. digital marketers in Canada' margin={30} v={formValue.target}  action={dispatch} type='target' />\n\n                        <CustomInput name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} v={formValue.occasion} type='occasion'/>\n\n                        <CustomInput name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} v={formValue.promotion} type='promotion'/>\n\n                    </div>    \n                } */}\n\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n                    </div>\n        </Grid>\n    )\n}\n\nexport default ValuePropositionForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Headlines\\GoogleHeadlinesForm.js",["718","719","720","721","722"],"// Google headlines model Form\n// the post call is here too \n// everything related to this model is here\n\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction GoogleHeadlinesForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false);\n    const activeTone = useRecoilValue(getActiveTone);\n\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/googhead/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Google Headlines</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                 {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default GoogleHeadlinesForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\InstagramCaptions\\InstagramCaptionForm.js",["723","724","725","726","727"],"// InstagramCaption model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n    \n        default:\n            return state;\n    }\n}\nfunction InstagramCaptionForm({languages}) {\n\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [loading, setloading] = React.useState(false)\n    const [results,setResults] = useRecoilState(resultsState);\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/captions/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n        \n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Instagram Captions</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              {/* <CustomInput  v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' /> */}\n\n              <CustomTextArea  v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput  v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default InstagramCaptionForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Description\\GoogleDescriptionForm.js",["728","729","730","731","732"],"// Google desc model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction GoogleDescriptionForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false);\n    const activeTone = useRecoilValue(getActiveTone);\n\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/googdescript/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Google Description</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                 {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default GoogleDescriptionForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Link Desc\\FacebookLinkDescForm.js",["733","734","735","736","737"],"// Facebook link desc  model Form\n// the post call is here too \n// everything related to this model is here\n\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction FacebookLinkDescForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/fbd/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Facebook Link Description</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default FacebookLinkDescForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Headlines\\FacebookHeadLinesForm.js",["738","739","740","741","742"],"// Facebook headline  model Form\n// the post call is here too \n// everything related to this model is here\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction FacebookHeadLinesForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n    const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/facebh/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Facebook Headlines</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n               {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default FacebookHeadLinesForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Primary Text\\FacebookPrimaryTextForm.js",["743","744","745","746","747"],"// Faceboook primary text model Form\n// the post call is here too \n// everything related to this model is here\n\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction FacebookPrimaryTextForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false);\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/fbtext/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Facebook Primary Text</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n               {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default FacebookPrimaryTextForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\ContentImprover\\ContentImproverForm.js",["748","749","750","751","752","753","754","755","756","757"],"// Content improver model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction ContentImproverForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.desc}/${activeTone.type}`\n        \n        window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n\n        axios.post(`${uri.link}/content/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n              setResults({...results,data:response.data,display:true});\n          }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n\n\n        React.useEffect(() => {\n          const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n          dispatch({type:'reset',value:inputs})\n      }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Content Improver</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                \n                  {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default ContentImproverForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\Listicles\\ListiclesForm.js",["758","759","760","761","762","763","764","765","766","767"],"// Listicles model Form\n// the post call is here too \n// everything related to this model is here\n\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction ListiclesForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.desc}/${activeTone.type}`\n        \n        window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n\n        axios.post(`${uri.link}/listicles/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n              setResults({...results,data:response.data,display:true});\n          }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n\n\n        React.useEffect(() => {\n          const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n          dispatch({type:'reset',value:inputs})\n      }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Listicles</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                \n                  {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default ListiclesForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ServicesPage\\ServicePageForm.js",["768","769","770","771","772","773","774","775","776","777","778"],"// Service page model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport MultiInputs from '../Shared/custom Multiinputs/MultiInputs';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    title:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n                                case 'title':\n                                    return{...state,title:action.value};\n                                    case 'keywords':\n                                        {\n                                            let old = state.keywords;\n                                            old.push(action.value);\n                                            return {...state,keywords:old};\n                                        }\n                                        case 'removeKeyword':\n                                            {\n                                                let filtred = state.keywords;\n                                                filtred = filtred.filter(elem=>{\n                                                    return elem!==action.value\n                                                });\n                                                return {...state,keywords:filtred};\n                                            }\n    \n        default:\n            return state;\n    }\n}\n\nfunction ServicePageForm({languages}) {\n    const [loading, setloading] = React.useState(false)\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n    const _getResults = ()=>{\n        setloading(true);\n        let keywords_strings = '';\n        formValue.keywords.map(keyword =>{\n            keywords_strings=keyword+',';\n        })\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            keyword:keywords_strings\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${keywords_strings}`\n        \n        // if(formValue.target.length>0)\n        //     req = `${req}/${formValue.target}`\n\n        // if(formValue.occasion.length>0)\n        //     req =`${req}/${formValue.occasion}`\n        \n        // if(formValue.promotion.length>0)\n        //     req =`${req}/${formValue.promotion}`\n\n        // if(formValue.target.length>0)\n        //     body = {...body,target:formValue.target}\n\n        // if(formValue.occasion.length>0)\n        //     body = {...body,occasion:formValue.occasion}\n        \n        // if(formValue.promotion.length>0)\n        //     body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/seo_servic/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            // setResults({...results,});\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            // if(window.localStorage.getItem('oldInputs')){\n            //     const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            //     dispatch({type:'reset',value:inputs})\n            // }\n            // else{\n                dispatch({type:'reset',value:{\n                    prod_name:'',\n                    desc:'',\n                    target:'',\n                    occasion:'',\n                    promotion:'',\n                    title:'',\n                    keywords:[]\n                }})\n            // }\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Service Page</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              \n\n                <MultiInputs action={dispatch} type='keywords' keywords={formValue.keywords} removeType={'removeKeyword'}/>\n               {/* <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                /> */}\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {/* {\n                    checked &&\n                    <div>\n                        <CustomInput name='target audience' placeholder='Ex. digital marketers in Canada' margin={30} v={formValue.target}  action={dispatch} type='target' />\n\n                        <CustomInput name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} v={formValue.occasion} type='occasion'/>\n\n                        <CustomInput name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} v={formValue.promotion} type='promotion'/>\n\n                    </div>    \n                } */}\n\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n                    </div>\n        </Grid>\n    )\n}\n\nexport default ServicePageForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\BlogIntro\\BlogIntroForm.js",["779","780","781","782","783","784","785","786","787"],"// Blog intro model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction BlogIntroForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/blog/${req}`,body)\n          .then(function (response) {\n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Blog Introduction</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                \n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default BlogIntroForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\BlogPosts\\BlogPostForm.js",["788","789","790","791","792","793","794","795","796","797","798"],"// Blog post model Form\n// the post call is here too \n// everything related to this model is here\n\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport MultiInputs from '../Shared/custom Multiinputs/MultiInputs';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    title:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n                                case 'title':\n                                    return{...state,title:action.value};\n                                    case 'keywords':\n                                        {\n                                            let old = state.keywords;\n                                            old.push(action.value);\n                                            return {...state,keywords:old};\n                                        }\n                                        case 'removeKeyword':\n                                            {\n                                                let filtred = state.keywords;\n                                                filtred = filtred.filter(elem=>{\n                                                    return elem!==action.value\n                                                });\n                                                return {...state,keywords:filtred};\n                                            }\n    \n        default:\n            return state;\n    }\n}\n\nfunction BlogPostForm({languages}) {\n    const [loading, setloading] = React.useState(false)\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n    const _getResults = ()=>{\n        setloading(true);\n        let keywords_strings = '';\n        formValue.keywords.map(keyword =>{\n            keywords_strings=keyword+',';\n        })\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            title:formValue.title,\n            keyword:keywords_strings\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.title}/${formValue.desc}/${keywords_strings}`\n        \n        // if(formValue.target.length>0)\n        //     req = `${req}/${formValue.target}`\n\n        // if(formValue.occasion.length>0)\n        //     req =`${req}/${formValue.occasion}`\n        \n        // if(formValue.promotion.length>0)\n        //     req =`${req}/${formValue.promotion}`\n\n        // if(formValue.target.length>0)\n        //     body = {...body,target:formValue.target}\n\n        // if(formValue.occasion.length>0)\n        //     body = {...body,occasion:formValue.occasion}\n        \n        // if(formValue.promotion.length>0)\n        //     body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/seo_blog/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            // setResults({...results,});\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            // if(window.localStorage.getItem('oldInputs')){\n            //     const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            //     dispatch({type:'reset',value:inputs})\n            // }\n            // else{\n                dispatch({type:'reset',value:{\n                    prod_name:'',\n                    desc:'',\n                    target:'',\n                    occasion:'',\n                    promotion:'',\n                    title:'',\n                    keywords:[]\n                }})\n            // }\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Blog Post</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomInput v={formValue.title} name='title' placeholder='title' action={dispatch} type='title' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              \n\n                <MultiInputs action={dispatch} type='keywords' keywords={formValue.keywords} removeType={'removeKeyword'}/>\n               {/* <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                /> */}\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {/* {\n                    checked &&\n                    <div>\n                        <CustomInput name='target audience' placeholder='Ex. digital marketers in Canada' margin={30} v={formValue.target}  action={dispatch} type='target' />\n\n                        <CustomInput name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} v={formValue.occasion} type='occasion'/>\n\n                        <CustomInput name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} v={formValue.promotion} type='promotion'/>\n\n                    </div>    \n                } */}\n\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n                    </div>\n        </Grid>\n    )\n}\n\nexport default BlogPostForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\SentenceExpander\\SentenceExpanderForm.js",["799","800","801","802","803","804","805","806","807","808"],"// Sentence Expander model Form\n// the post call is here too \n// everything related to this model is here\n\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction SentenceExpanderForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.desc}/${activeTone.type}`\n        \n        window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n\n        axios.post(`${uri.link}/expand/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n              setResults({...results,data:response.data,display:true});\n          }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n\n\n        React.useEffect(() => {\n          const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n          dispatch({type:'reset',value:inputs})\n      }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Sentence Expander</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                \n                  {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default SentenceExpanderForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ProductPage\\ProductPageForm.js",["809","810","811","812","813","814","815","816","817","818","819"],"// Product page model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport MultiInputs from '../Shared/custom Multiinputs/MultiInputs';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    title:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n                                case 'title':\n                                    return{...state,title:action.value};\n                                    case 'keywords':\n                                        {\n                                            let old = state.keywords;\n                                            old.push(action.value);\n                                            return {...state,keywords:old};\n                                        }\n                                        case 'removeKeyword':\n                                            {\n                                                let filtred = state.keywords;\n                                                filtred = filtred.filter(elem=>{\n                                                    return elem!==action.value\n                                                });\n                                                return {...state,keywords:filtred};\n                                            }\n    \n        default:\n            return state;\n    }\n}\n\nfunction ProductPageForm({languages}) {\n    const [loading, setloading] = React.useState(false)\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n    const _getResults = ()=>{\n        setloading(true);\n        let keywords_strings = '';\n        formValue.keywords.map(keyword =>{\n            keywords_strings=keyword+',';\n        })\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            keyword:keywords_strings\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${keywords_strings}`\n        \n        // if(formValue.target.length>0)\n        //     req = `${req}/${formValue.target}`\n\n        // if(formValue.occasion.length>0)\n        //     req =`${req}/${formValue.occasion}`\n        \n        // if(formValue.promotion.length>0)\n        //     req =`${req}/${formValue.promotion}`\n\n        // if(formValue.target.length>0)\n        //     body = {...body,target:formValue.target}\n\n        // if(formValue.occasion.length>0)\n        //     body = {...body,occasion:formValue.occasion}\n        \n        // if(formValue.promotion.length>0)\n        //     body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/seo_prod/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            // setResults({...results,});\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            // if(window.localStorage.getItem('oldInputs')){\n            //     const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            //     dispatch({type:'reset',value:inputs})\n            // }\n            // else{\n                dispatch({type:'reset',value:{\n                    prod_name:'',\n                    desc:'',\n                    target:'',\n                    occasion:'',\n                    promotion:'',\n                    title:'',\n                    keywords:[]\n                }})\n            // }\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Product Page</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              \n\n                <MultiInputs action={dispatch} type='keywords' keywords={formValue.keywords} removeType={'removeKeyword'}/>\n               {/* <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                /> */}\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {/* {\n                    checked &&\n                    <div>\n                        <CustomInput name='target audience' placeholder='Ex. digital marketers in Canada' margin={30} v={formValue.target}  action={dispatch} type='target' />\n\n                        <CustomInput name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} v={formValue.occasion} type='occasion'/>\n\n                        <CustomInput name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} v={formValue.promotion} type='promotion'/>\n\n                    </div>    \n                } */}\n\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n                    </div>\n        </Grid>\n    )\n}\n\nexport default ProductPageForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\HomePage\\HomePageForm.js",["820","821","822","823","824","825","826","827","828","829","830"],"// Home page model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport MultiInputs from '../Shared/custom Multiinputs/MultiInputs';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    title:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n                                case 'title':\n                                    return{...state,title:action.value};\n                                    case 'keywords':\n                                        {\n                                            let old = state.keywords;\n                                            old.push(action.value);\n                                            return {...state,keywords:old};\n                                        }\n                                        case 'removeKeyword':\n                                            {\n                                                let filtred = state.keywords;\n                                                filtred = filtred.filter(elem=>{\n                                                    return elem!==action.value\n                                                });\n                                                return {...state,keywords:filtred};\n                                            }\n    \n        default:\n            return state;\n    }\n}\n\nfunction HomePageForm({languages}) {\n    const [loading, setloading] = React.useState(false)\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n    const _getResults = ()=>{\n        setloading(true);\n        let keywords_strings = '';\n        formValue.keywords.map(keyword =>{\n            keywords_strings=keyword+',';\n        })\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            keyword:keywords_strings\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${keywords_strings}`\n        \n        // if(formValue.target.length>0)\n        //     req = `${req}/${formValue.target}`\n\n        // if(formValue.occasion.length>0)\n        //     req =`${req}/${formValue.occasion}`\n        \n        // if(formValue.promotion.length>0)\n        //     req =`${req}/${formValue.promotion}`\n\n        // if(formValue.target.length>0)\n        //     body = {...body,target:formValue.target}\n\n        // if(formValue.occasion.length>0)\n        //     body = {...body,occasion:formValue.occasion}\n        \n        // if(formValue.promotion.length>0)\n        //     body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/seo_home/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            // setResults({...results,});\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            // if(window.localStorage.getItem('oldInputs')){\n            //     const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            //     dispatch({type:'reset',value:inputs})\n            // }\n            // else{\n                dispatch({type:'reset',value:{\n                    prod_name:'',\n                    desc:'',\n                    target:'',\n                    occasion:'',\n                    promotion:'',\n                    title:'',\n                    keywords:[]\n                }})\n            // }\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Home Page</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              \n\n                <MultiInputs action={dispatch} type='keywords' keywords={formValue.keywords} removeType={'removeKeyword'}/>\n               {/* <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                /> */}\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {/* {\n                    checked &&\n                    <div>\n                        <CustomInput name='target audience' placeholder='Ex. digital marketers in Canada' margin={30} v={formValue.target}  action={dispatch} type='target' />\n\n                        <CustomInput name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} v={formValue.occasion} type='occasion'/>\n\n                        <CustomInput name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} v={formValue.promotion} type='promotion'/>\n\n                    </div>    \n                } */}\n\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n                    </div>\n        </Grid>\n    )\n}\n\nexport default HomePageForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Pain agitate solution\\PASForm.js",["831","832","833","834","835"],"// Pain Agitate model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction PASForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/pasol/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Pain Agitate Solution</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                  {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default PASForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Marketing angles\\MarketingAnglesForm.js",["836","837","838","839","840","841","842","843","844"],"// MarketingAngles  model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction MarketingAnglesForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/marketing/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Marketing Angles</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n               \n  {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n}\n               </div>\n        </Grid>\n    )\n}\n\nexport default MarketingAnglesForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Problem promise proof\\PPPForm.js",["845","846","847","848","849"],"// Problem promise proof model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\n\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction PPPForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/prob/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Problem Promise Proof</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n              {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default PPPForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature to benefits\\FTBForm.js",["850","851","852","853","854"],"// Feature to benifit model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n\n  case 'reset':\n    return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction FTBForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/ftb/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>feature to benefits</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n}\n               </div>\n        </Grid>\n    )\n}\n\nexport default FTBForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Functional benefits\\FunctionalBenefitForm.js",["855","856","857","858","859","860","861","862","863","864","865"],"// Functional Benifit model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction FunctionalBenefitForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            description:formValue.desc,\n        };\n\n        let req = `${languages.input}/${formValue.desc}`\n        \n        window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/functional/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Functional Benefit</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n\n              <CustomTextArea  v={formValue.desc} action={dispatch} type='desc'/>\n               \n          \n                \n              {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n}\n               </div>\n        </Grid>\n    )\n}\n\nexport default FunctionalBenefitForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Before After bridge\\BABForm.js",["866","867","868","869","870"],"// Before After Bridge model Form\n// the post call is here too \n// everything related to this model is here\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction BABForm({languages}) {\n    const [loading, setloading] = React.useState(false)\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n    const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/bridge/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Before After Bridge</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput  v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                  {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n}\n               </div>\n        </Grid>\n    )\n}\n\nexport default BABForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature advantage benefit\\FABForm.js",["871","872","873","874","875"],"// Featureadvantage benefit model Form\n// the post call is here too \n// everything related to this model is here\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction FABForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const [loading, setloading] = React.useState(false)\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n\n    const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/fab/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>feature advantage benefit</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                   {\n                    loading ?\n                          <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                          :\n                <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n}\n               </div>\n        </Grid>\n    )\n}\n\nexport default FABForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\AIDA\\AidaForm.js",["876","877","878","879","880"],"// Aida model Form\n// the post call is here too \n// everything related to this model is here\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\n\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction AidaForm({languages}) {\n    const [loading, setloading] = React.useState(false)\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [results,setResults] = useRecoilState(resultsState);\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n    const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/aida/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            // setResults({...results,});\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n            // window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>AIDA</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                              <VoiceToneList />\n\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput name='target audience' placeholder='Ex. digital marketers in Canada' margin={30} v={formValue.target}  action={dispatch} type='target' />\n\n                        <CustomInput name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} v={formValue.occasion} type='occasion'/>\n\n                        <CustomInput name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} v={formValue.promotion} type='promotion'/>\n\n                    </div>    \n                }\n\n                {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n                    </div>\n        </Grid>\n    )\n}\n\nexport default AidaForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Emotional angles\\EmoAnglesForm.js",["881","882","883","884","885","886","887","888","889","890","891"],"// Emotional Angle model Form\n// the post call is here too \n// everything related to this model is here\n\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios'\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                                return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction EmoAnglesForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [loading, setloading] = React.useState(false)\n    const [results,setResults] = useRecoilState(resultsState);\n    const [checked, setchecked] = React.useState(false);\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            description:formValue.desc,\n        };\n\n        let req = `${languages.input}/${formValue.desc}`\n        \n        window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/emotional/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Emotional Angles</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n               \n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n               {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n}\n               </div>\n        </Grid>\n    )\n}\n\nexport default EmoAnglesForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Email Section\\Email Headlines\\EmailForm.js",["892","893","894","895","896"],"// Email headlines model Form\n// the post call is here too \n// everything related to this model is here\n\nimport { Button, Grid, TextareaAutosize, TextField } from '@material-ui/core'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../../../Assets/Css/ProductForm.css'\nimport CustomInput from './CustomInput';\nimport CustomTextArea from './CustomTextArea.js';\n\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {uri} from '../../../Url_base';\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../../Atoms/Atoms'\nimport VoiceToneList from '../../Voice tone/VoiceToneList';\nimport { getActiveTone } from \"../../../Selectors/TonesSelector\";\n\nconst initValue = {\n    prod_name:'',\n    desc:'',\n    target:'',\n    occasion:'',\n    promotion:'',\n    keywords:[]\n}\n\nconst reducer =(state,action)=>{\n    switch (action.type) {\n        case 'prod_name':\n            return{...state,prod_name:action.value};\n            case 'desc':\n                return{...state,desc:action.value};\n                case 'target':\n                    return{...state,target:action.value};\n                    case 'occasion':\n                        return{...state,occasion:action.value};\n                        case 'promotion':\n                            return{...state,promotion:action.value};\n                            case 'reset':\n                            return action.value;\n    \n        default:\n            return state;\n    }\n}\n\nfunction EmailForm({languages}) {\n    const [formValue, dispatch] = React.useReducer(reducer, initValue);\n    const [checked, setchecked] = React.useState(false);\n    const [loading, setloading] = React.useState(false)\n    const [results,setResults] = useRecoilState(resultsState);\n    const activeTone = useRecoilValue(getActiveTone);\n\n    const handleChange = (event) => {\n        setchecked(event.target.checked);\n      };\n\n      const _getResults = ()=>{\n        setloading(true);\n        let body = {\n            inp:languages.input,\n            prod_name:formValue.prod_name,\n            description:formValue.desc,\n            tone:activeTone.type\n        };\n\n        let req = `${languages.input}/${formValue.prod_name}/${formValue.desc}/${activeTone.type}`\n        \n        if(formValue.target.length>0)\n            req = `${req}/${formValue.target}`\n\n        if(formValue.occasion.length>0)\n            req =`${req}/${formValue.occasion}`\n        \n        if(formValue.promotion.length>0)\n            req =`${req}/${formValue.promotion}`\n\n        if(formValue.target.length>0)\n            body = {...body,target:formValue.target}\n\n        if(formValue.occasion.length>0)\n            body = {...body,occasion:formValue.occasion}\n        \n        if(formValue.promotion.length>0)\n            body = {...body,promotion:formValue.promotion}\n\n            window.localStorage.setItem('oldInputs',JSON.stringify(formValue))\n\n        axios.post(`${uri.link}/email/${req}`,body)\n          .then(function (response) {\n           \n            setloading(false);\n            if(response.data.length>0){\n                setResults({...results,data:response.data,display:true});\n            }\n\n          })\n          .catch(function (error) {\n              setloading(false)\n            console.log(error);\n          });\n        }\n\n\n        React.useEffect(() => {\n            const inputs = JSON.parse(window.localStorage.getItem('oldInputs'))\n            dispatch({type:'reset',value:inputs})\n        }, [])\n\n    return (\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n                <section style={{background:'rgb(217,221,251)',padding:'10px',textAlign:'center'}}>\n                    <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px'}}>Email Headlines</span>\n                </section>\n               <div style={{background:'white',marginTop:'30px',padding:'20px',display:'flex',flexDirection:'column',justifyContent:'center'}}>\n              <CustomInput v={formValue.prod_name} name='product name' placeholder='product name' action={dispatch} type='prod_name' />\n\n              <CustomTextArea v={formValue.desc} action={dispatch} type='desc'/>\n              <VoiceToneList />\n               <FormControlLabel\n                    control={<Checkbox checked={checked} onChange={handleChange} name=\"checkedA\" color='default' size=\"small\" />}\n                    label=\"More options\"\n                    className='salma'\n                    style={{marginTop:'20px',color:'#C4C4C4',marginBottom:'10px'}}\n                />\n                {/* <input type=\"checkbox\" id=\"scales\" name=\"scales\"\n                        checked={checked} onChange={handleChange} />\n                <label for=\"scales\">More options</label> */}\n                {\n                    checked &&\n                    <div>\n                        <CustomInput  v={formValue.target} name='target audience' placeholder='Ex. digital marketers in Canada' margin={30}  action={dispatch} type='target' />\n\n                        <CustomInput v={formValue.occasion} name='occasion' placeholder=\"ex. valentine's Day\" margin={30}  action={dispatch} type='occasion'/>\n\n                        <CustomInput v={formValue.promotion} name='promotion' placeholder='ex. 20% off'  margin={30}  action={dispatch} type='promotion'/>\n\n                    </div>    \n                }\n                 {\n                    loading ?\n                    <CircularProgress size={24} style={{alignSelf:'center',marginTop:'35px'}}/>\n                    :\n                    <Button\n                    style={{background:'#6A7BFF',color:'white',marginTop:'20px',borderRadius:'0px'}}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={()=>_getResults()}\n                    >\n                  Create\n                </Button>\n                }\n               </div>\n        </Grid>\n    )\n}\n\nexport default EmailForm\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\index.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Product Section\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Email Section\\Email Headlines\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Emotional angles\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\AIDA\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature advantage benefit\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Before After bridge\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Functional benefits\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature to benefits\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Problem promise proof\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Selectors\\TonesSelector.js",["897","898","899","900"],"import {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n  } from 'recoil';\nimport {voiceToneState} from '../Atoms/Atoms'\n\n\n\nexport const getTones = selector({\n  key:'getTones',\n  get:({get})=>{\n    const tones = get(voiceToneState);\n    return tones\n  }\n})\n\n\nexport const getActiveTone = selector({\n    key:'getActiveTone',\n    get:({get})=>{\n      const tones = get(voiceToneState);\n      console.log('Toness here',tones)\n        let activeTone = tones?.filter(tone=> {\n            return tone.isActive === true\n        })\n        return activeTone[0]\n    }\n  })","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Product Section\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SideBar\\SingleAccording.js",["901","902"],"// this what i call a single section\n// that vahe multiple SideMenuButton \n//  content props has an options array thaw will render the buttons\n\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport SideMenuButton from './SideMenuButton';\n\nconst Accordion = withStyles({\n    root: {\n      border: '1px solid rgb(243,243,243)',\n      boxShadow: 'none',\n      '&:not(:last-child)': {\n        borderBottom: 0,\n      },\n      '&:before': {\n        display: 'none',\n      },\n      '&$expanded': {\n        margin: 'auto',\n      },\n    },\n    expanded: {},\n  })(MuiAccordion);\n  \n  const AccordionSummary = withStyles({\n    root: {\n      backgroundColor: 'white',\n  \n      marginBottom: -0,\n      minHeight: 56,\n      '&$expanded': {\n        minHeight: 56,\n      },\n    },\n    content: {\n      '&$expanded': {\n        margin: '0px 0',\n      },\n    },\n    expanded: {},\n  })(MuiAccordionSummary);\n  \n  const AccordionDetails = withStyles((theme) => ({\n    root: {\n      padding: theme.spacing(2),\n  \n    },\n  }))(MuiAccordionDetails);\nfunction SingleAccording({expanded,handleChange,name,content,activePath,setter}) {\n\n\n    const accordStyle={\n        width:'100%',\n        textAlign:'center',\n        color:expanded === name?'white':'#202020',\n        transition: 'color .5s'\n    }\n\n    const summuryStyle={       \n        background:expanded === name?'#6A7BFF':'white',\n        transition: 'background .5s',\n    \n    }\n\n    return (\n        <Accordion square expanded={expanded === name} onChange={handleChange(name)} style={{borderLeft:'none',borderRight:'none',borderTop:'1px solid rgb(243,243,243)'}} >\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\" expandIcon={<ExpandMoreIcon  style={{color:expanded === name?'white':'#6A7BFF'}}/>} style={summuryStyle}> \n        <section style={accordStyle}>\n          <span style={{fontWeight:'lighter',fontSize:'15px'}}>{content.name}</span>\n        </section>\n        </AccordionSummary>\n        <AccordionDetails style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\n            {\n                 content.options && \n                content.options.map(btn=>{\n                    return <SideMenuButton value={btn} activePath={activePath} setter={setter}/>\n                })\n            }\n           \n\n        </AccordionDetails>\n \n      </Accordion>\n    )\n}\n\nexport default SingleAccording\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Email Section\\Email Headlines\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Emotional angles\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\AIDA\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature advantage benefit\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Voice tone\\VoiceToneList.js",["903","904","905","906","907"],"// this component conatin the voice tones \n// that we use while generating copies\n// check the Atom \n\n\nimport React from 'react'\nimport {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n  } from \"recoil\";\nimport { getTones,getActiveTone } from \"../../Selectors/TonesSelector\";\nimport {voiceToneState} from '../../Atoms/Atoms'\nimport Select from '@material-ui/core/Select';\nimport { Grid } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction VoiceToneList() {\n    const [_tonesState, _setonesState] = useRecoilState(voiceToneState);\n    const tones = useRecoilValue(getTones);\n    const activeTone = useRecoilValue(getActiveTone);\n\n\n    const handleChange = (value)=>{\n        let wrong = [];\n        _tonesState.map(tone=>{\n          if(tone.type!==value){\n                wrong.push(_tonesState.indexOf(tone))\n          }\n      })\n    const elementIndex =_tonesState.findIndex(tone => tone.type === value );\n    let newArray = [..._tonesState];\n    newArray[elementIndex] = {...newArray[elementIndex], isActive: true};\n    wrong.map(i=>{\n        newArray[i] = {...newArray[i], isActive: false};\n    })\n    _setonesState(newArray)\n    };\n    \n    return (\n        <Grid item md={12} xs={12} style={{display:'flex',flexDirection:'column',marginTop:'35px'}}>\n        <span style={{fontSize:'18px',textTransform:'capitalize'}}>Voice tone</span>\n        <Select\n          style={{marginTop:'10px'}}\n          value={activeTone.type}\n          onChange={(e)=>handleChange(e.target.value)}\n        >\n            {\n                    tones.map(tone =>{\n                        return <MenuItem  style={{color:'white',textTransform:'capitalize'}} value={tone.type}>{tone.type}</MenuItem>\n                    })\n            }\n        </Select>\n\n        </Grid>\n    )\n}\n\nexport default VoiceToneList\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Before After bridge\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Functional benefits\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Feature to benefits\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Problem promise proof\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SideBar\\SideMenuButton.js",["908","909","910","911","912"],"// this component is the button or whatever u can call \n// where the end user click it will load the form depends on the props values : link,name ect\n\n\nimport React from 'react'\nimport {motion} from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport {useLocation} from \"react-router-dom\";\nimport {RecoilRoot,atom,selector,useRecoilState,useRecoilValue,} from \"recoil\";\nimport {resultsState} from '../../Atoms/Atoms'\nfunction SideMenuButton({value,activePath,setter,yes}) {\n\n    const [results,setResults] = useRecoilState(resultsState);\n    const rs = ()=>{\n        window.localStorage.setItem('oldInputs',JSON.stringify({\n            prod_name:'',\n            desc:'',\n            target:'',\n            occasion:'',\n            promotion:''\n        }))\n    }\n\n//#6A7BFF\n//#c4c4c4\n//#4252d4\n    return (\n        <Link style={{textDecoration:'none',marginBottom:'13px'}} to={`/home${value.link}`} onClick={()=>{setter(value.link);setResults({...results,display:false});rs()}}>\n            \n        <motion.span whileHover={{color:'#2637c7'}}  style={{cursor:'pointer',color:activePath===value.link?'#2637c7':'#6A7BFF',textAlign:'justify'}}>{value.name}</motion.span>\n        </Link>\n\n    )\n\n  \n}\n\nexport default SideMenuButton\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Marketing angles\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Pain agitate solution\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\HomePage\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ProductPage\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\SentenceExpander\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\BlogPosts\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\BlogIntro\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ServicesPage\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\Listicles\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Marketing angles\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SalesCopy\\Pain agitate solution\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\HomePage\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\ContentImprover\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Primary Text\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Headlines\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ProductPage\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\BlogPosts\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\SentenceExpander\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\BlogIntro\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\Shared\\custom Multiinputs\\MultiInputs.js",["913","914"],"// this component handle multi inputs ( keywords on SEO models )\n// reducer hook on each model handle the input from this component\n\nimport React from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport { TextField } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      listStyle: 'none',\n      padding: theme.spacing(0.5),\n      margin: 0,\n    },\n    chip: {\n      margin: theme.spacing(0.5),\n      border:'1px solid #6A7BFF'\n    \n    },\n  }));\n\nfunction MultiInputs({action,type,keywords,removeType}) {\n    let icon;\n    const classes = useStyles();\n    const inputRef = React.useRef();\n    const [inputValue, setinputValue] = React.useState('')\n    const [mouseIn, setmouseIn] = React.useState(false)\n \n    const handleDelete = (chipToDelete) => () => {\n        // setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n        action({type:removeType,value:chipToDelete});\n      };\n    \n     const handleKeyDown = (event) =>{\n        if(event.keyCode === 13) { \n            action({type:type,value:event.target.value});\n            setinputValue('');\n      }\n    }\n    return (\n        <>\n        <TextField style={{marginTop:'15px'}} label=\"KeyWords\" value={inputValue} onKeyDown={(e)=>handleKeyDown(e)} onChange={(e)=>setinputValue(e.target.value)}/>\n        {\n            keywords && keywords.length>0 && \n        <Paper component=\"ul\" className={classes.root}>\n        {keywords.map(keyword => {\n            return (\n            <li key={keyword} onMouseEnter={()=>setmouseIn(true)} onMouseLeave={()=>setmouseIn(false)}>\n                <Chip\n                deleteIcon={<HighlightOffIcon  fontSize=\"small\"  style={{color:!mouseIn?'#6A7BFF':'#EEE9FE'}}/>}\n                label={keyword}\n                onDelete={handleDelete(keyword)}\n                className={classes.chip}\n                style={ !mouseIn?{ background:'#EEE9FE',\n                color:'#6A7BFF',\n                fontSize:'15px'}:\n                {\n                  background:'#6A7BFF',\n                  color:'#EEE9FE',\n                  fontSize:'15px'\n                }}\n                />\n            </li>)\n            })\n         }\n             </Paper>\n        }\n        </>\n\n    )\n}\n\nexport default MultiInputs\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\SEO\\ServicesPage\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\Listicles\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Description\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Link Desc\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\InstagramCaptions\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Headlines\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\WebsitesCopy\\ContentImprover\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Primary Text\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Brainstorming\\Value proposition\\CustomTextArea.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Headlines\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Facebook Link Desc\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Description\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\InstagramCaptions\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Social ADS\\Google Headlines\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Brainstorming\\Value proposition\\CustomInput.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Favorite\\Favorite.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Results\\CustomCard.js",["915","916","917","918","919","920"],"// this a custom card\n// display the data ( generated text ) \n// from the <Results> component\n\n\n\nimport React from 'react'\n// import SaveAltIcon from '@material-ui/icons/SaveAlt';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\n// import { Divider, Grid, IconButton, Paper } from '@material-ui/core';\nimport { Divider, Grid, IconButton, Paper } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport {ReactComponent as DeleteIcon} from '../../Assets/Icons/svg/fi-rs-trash.svg';\nimport {ReactComponent as DownloadIcon} from '../../Assets/Icons/svg/fi-rs-download.svg';\nimport {ReactComponent as HeartIcon} from '../../Assets/Icons/svg/fi-rs-bookmark.svg';\n\nfunction CustomCard({index,content}) {\n    const [hoverIcons, sethoverIcons] = React.useState({heart:false,download:false});\n\n    const styleDelete={width:20,height:24,fill:hoverIcons.heart?'#6A7BFF':'#D9DDFB',marginRight:15,transition:'0.5s',cursor:'pointer'};\n    const styleDonwload={width:20,height:24,fill:hoverIcons.download?'#6A7BFF':'#D9DDFB',marginRight:15,transition:'0.5s',cursor:'pointer'};\n\n\n    const beautify = ()=>{\n        let display = [];\n       let res =  content.split(' \\n ');\n       res.map(elem=>{\n            display.push(<p style={{padding:'0px 10px 0px 10px',fontSize:'15px'}}>{elem.replace('text: ','')}</p>)\n       })\n       return display\n    }\n\n\n    console.log('RES HERE',beautify())\n\n    return (\n        // <Paper elevation={0} square style={{height:'190px',marginBottom:'10px',padding:'10px'}}>\n            \n        //     <span><b style={{fontSize:'18px'}}>{`Result${index}`}</b></span>\n        //     <Grid item md ={12} style={{overflowY:'auto',height:'100px'}}>\n        //     <p style={{display:'inline-block',wordWrap:'break-word',whiteSpace:'initial',overflowWrap:\"break-word\"}}>{content}</p>\n        //     </Grid>\n        //     <Divider variant=\"middle\" />\n        //     <section style={{float:'right',padding:'10px'}}>\n        //         <IconButton size='small' aria-label=\"upload picture\" component=\"span\" style={{marginRight:'10px'}}>\n        //             <SaveAltIcon fontSize=\"small\" style={{color:'#6A7BFF'}}/>\n        //         </IconButton>\n        //         <IconButton size='small'  aria-label=\"upload picture\" component=\"span\">\n        //             <FavoriteIcon fontSize=\"small\" style={{color:'#6A7BFF'}} />\n        //         </IconButton>\n        //     </section>\n        // </Paper>\n         <Paper elevation={0} square style={{height:'33vh',marginBottom:'10px',padding:'24px',width:'100%',marginRight:'15px',borderRadius:'10px'}}>\n            \n         <div style={{display:'flex',flexDirection:'column',justifyContent:'space-between'}}>\n             <div style={{height:'23vh'}}>\n             <span><b style={{fontSize:'18px',marginLeft:'10px',fontWeight:'bold'}}>{`Result ${index}`}</b></span>\n             <Divider variant=\"middle\" style={{marginTop:'10px',marginLeft:'-10px'}} />\n\n             {/* <p  style={{height:'16vh',overflowY:'auto',display:'inline-block',wordWrap:'break-word',whiteSpace:'initial',overflowWrap:\"break-word\",padding:'10px',fontSize:'15px'}}>\n             {   beautify(content)}\n            </p> */}\n            <div style={{height:'17vh',overflowY:'auto'}}>\n            {\n                beautify()\n            }\n            </div>\n            \n             </div>\n             <section style={{float:'right',marginRight:'-10px',paddingTop:'10px',display:'flex',justifyContent:'flex-end'}}>\n                     <DownloadIcon  style={styleDonwload} onMouseEnter={()=>sethoverIcons({...hoverIcons,download:true})} onMouseLeave={()=>sethoverIcons({...hoverIcons,download:false})} />\n\n               \n                     <HeartIcon  style={styleDelete} onMouseEnter={()=>sethoverIcons({...hoverIcons,heart:true})} onMouseLeave={()=>sethoverIcons({...hoverIcons,heart:false})}/>\n         \n             </section>\n         </div> \n     </Paper>\n\n    )\n}\n\nexport default CustomCard\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Profile\\Profile.js",["921","922","923","924","925"],"//this component  handle the profile inputs \n// and plans\n// for future uses just change here and the custom components AccountInfoSection PasswordSection Plans\n\n\n\nimport React from 'react'\nimport { Badge, Button, Container, Grid } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountInfoSection from '../../Components/Profile/AccountInfoSection';\nimport PasswordSection from '../../Components/Profile/PasswordSection';\nimport Plans from '../../Components/Profile/Plans';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n} from 'recoil';\n\nimport { userState } from '../../Atoms/Atoms'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'first_name ':\n            return { ...state, fullname: action.value }\n\n        case 'last_name':\n            return { ...state, email: action.value }\n\n        case 'current_pass':\n            return { ...state, current_password: action.value }\n\n        case 'new_pass':\n            return { ...state, new_password: action.value }\n        case 'img':\n            return { ...state, img: action.value }\n        default:\n            return state\n    }\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n}));\nfunction Profile() {\n    const classes = useStyles();\n    const [user, setUser] = useRecoilState(userState);\n    const fileRef = React.useRef('');\n    const userInfo = {\n        fullname:user.fullname,\n        firstname: user.first_name,\n        lastname: user.last_name,\n        current_password: 'xyz',\n        new_password: '',\n        img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Felix_Cat-Haha.svg/1200px-Felix_Cat-Haha.svg.png'\n    };\n    const [userForm, dispatch] = React.useReducer(reducer, userInfo)\n\n    const check_ = () => {\n        let check = false;\n        if (typeof userForm?.img == 'object') {\n            check = true\n        }\n        else {\n            check = false\n        }\n        return check\n\n    }\n    return (\n        <Container>\n            <Grid item md={12} xs={12} style={{ padding: '20px' }}>\n                <section style={{ background: 'rgb(217,221,251)', padding: '10px', width: '50%', marginBottom: '30px' }}>\n                    <span className='boldText' style={{ textTransform: 'uppercase', fontSize: '30px', marginLeft: '14px' }}>PROFILE</span>\n                </section>\n                <div style={{ background: 'white', padding: '20px' }}>\n                    <Badge onClick={() => fileRef.current.click()} style={{ cursor: 'pointer' }} badgeContent={<AddCircleOutlineIcon style={{ fontSize: '12px' }} />} color=\"primary\" anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n                        <section>\n                            <Avatar alt=\"Remy Sharp\" src={check_() ? URL.createObjectURL(userForm.img) : userForm?.img} className={classes.large} variant='square' />\n                            <input type='file' hidden ref={fileRef} onChange={(e) => dispatch({ type: 'img', value: e.target.files[0] })} />\n                        </section>\n                    </Badge>\n                    <div style={{ display: 'flex', marginTop: '46px', justifyContent: 'space-between' }}>\n\n                        <AccountInfoSection dispatcher={dispatch} form={userForm} />\n\n                        <PasswordSection dispatcher={dispatch} form={userForm} />\n\n                    </div>\n                    <Plans />\n                    <div style={{ height: '100px', padding: '10px', marginTop: '80px' }}>\n\n                        <Button onClick={() => { console.log('FORM HERE', userForm) }} variant=\"contained\" disableElevation style={{ borderRadius: '0px', float: 'right', width: '327px', background: '#6A7BFF', color: 'white', fontWeight: 'bold' }}>\n                            save\n                    </Button>\n                        <Button variant=\"outlined\" disableElevation style={{ borderRadius: '0px', float: 'right', width: '327px', marginRight: '20px', borderColor: '#6A7BFF', color: '#6A7BFF', fontWeight: 'bold' }}>\n                            Upgrade my plan\n                    </Button>\n                    </div>\n                </div>\n\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Profile\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Views\\Workspaces\\Workspaces.js",["926","927","928","929"],"// workspaces  :: the display the new workspace input \n// everything related to workspaces is here\n// just the logique and api call must be  inside WorkspaceContainer\n\nimport React from 'react'\nimport { Button, Container, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport SingleRow from '../../Components/AddWorkspaces/SingleRow';\nimport {activeWorkspace} from '../../Selectors/WorkspaceSelector';\nimport {workSpaceState} from '../../Atoms/Atoms'\n\nimport {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n  } from 'recoil';\nimport NewWorkSpace from '../../Components/AddWorkspaces/NewWorkSpace';\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction Workspaces() {\n    const [workspaces, setWorkSpaces] = useRecoilState(workSpaceState);\n    const activeSpacework = useRecoilValue(activeWorkspace);\n    const [isNew, setIsNew] = React.useState(false)\n\n\n    console.log('ACRIVE HERE ::::::::',activeSpacework)\n\n\n    const push_new = (value)=>{\n        setWorkSpaces((oldList)=>[\n            ...oldList,{\n                name:value,\n                isActive:false\n            },\n        ]);\n        setIsNew(false);\n    }\n    return (\n        <Container>\n        <Grid item md={12} xs ={12} style={{padding:'20px'}}>\n            <section style={{background:'rgb(217,221,251)',padding:'10px',width:'50%',marginBottom:'30px'}}>\n                <span className='boldText' style={{textTransform:'uppercase',fontSize:'30px',marginLeft:'14px'}}>ADD WORKSPACE</span>\n            </section>\n            <div style={{background:'white',padding:'20px'}}>\n            {\n                workspaces.map(elem=>{\n                    \n                    return <SingleRow workspace={elem}/>\n                })\n            }\n            {\n                isNew && \n                <NewWorkSpace isNewSetter={setIsNew} push_new={push_new} /> \n            }\n                \n            </div>\n            <Button variant=\"contained\" style={{background:'#6A7BFF',borderRadius:'0px',color:'white',fontWeight:'bold',float:'right',marginTop:'10PX'}} disableElevation\tonClick={()=>setIsNew(true)}>\n                    ADD NEW WORKSPACE\n                </Button>\n            \n        </Grid>\n    </Container>\n)\n}\n\nexport default Workspaces\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Favorite\\SingleFav.js",["930","931","932","933","934","935"],"// this is the favorite card \n// all the logique must be here with favorite id in case of delete or edit or idk \n//\n\n\nimport React from 'react'\nimport { Divider, Grid, IconButton, Paper, TextField } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport {ReactComponent as DeleteIcon} from '../../Assets/Icons/svg/fi-rs-trash.svg';\nimport {ReactComponent as DownloadIcon} from '../../Assets/Icons/svg/fi-rs-download.svg';\nimport {ReactComponent as EditIcon} from '../../Assets/Icons/svg/fi-rs-pencil.svg';\nimport {ReactComponent as SaveIcon} from '../../Assets/Icons/svg/fi-rs-disk.svg';\n\nimport {motion} from 'framer-motion'\nfunction SingleFav({index,content}) {\n    const [edit, setedit] = React.useState(false);\n    const [hoverIcons, sethoverIcons] = React.useState({delete:false,download:false,edit:false});\n    const [inputValue, setinputValue] = React.useState('Favorite');\n\n\n    const styleDelete={width:20,height:24,fill:hoverIcons.delete?'#6A7BFF':'#D9DDFB',marginRight:15,transition:'0.5s',cursor:'pointer'};\n    const styleDonwload={width:20,height:24,fill:hoverIcons.download?'#6A7BFF':'#D9DDFB',marginRight:15,transition:'0.5s',cursor:'pointer'};\n    const styleEdit={width:16,height:20,fill:hoverIcons.edit?'#6A7BFF':'#D9DDFB',marginRight:15,transition:'0.5s',cursor:'pointer',float:'right'};\n    const styleSave={width:16,height:20,fill:hoverIcons.edit?'#6A7BFF':'#D9DDFB',marginRight:15,transition:'0.5s',cursor:'pointer',float:'right'};\n\n\n    const _handleChange = (e)=>{\n        setinputValue(e.target.value)\n    }\n\n    return (\n        <Paper elevation={0} square style={{height:'33vh',marginBottom:'10px',padding:'24px',width:'48%',marginRight:'15px'}}>\n            \n            <div style={{display:'flex',flexDirection:'column',justifyContent:'space-between'}}>\n                <div style={{height:'22vh',overflowY:'auto'}}>\n                    {\n                        edit ?\n                        <div> \n                        <input onChange={(e)=>_handleChange(e)} defaultValue={inputValue} style={{border:'none', outline:'none',background:'#f2f4ff',borderRadius:'5px',padding:'5px'}} />\n                        <SaveIcon onClick={()=>{setedit(false);console.log(inputValue)}}  style={styleSave} onMouseEnter={()=>sethoverIcons({...hoverIcons,edit:true})} onMouseLeave={()=>sethoverIcons({...hoverIcons,edit:false})}/>\n                        </div>\n                        :\n                        <div>\n                        <span><b style={{fontSize:'18px',marginLeft:'10px',fontWeight:'bold'}}>{`Favorite`}</b></span>\n                        <EditIcon onClick={()=>setedit(true)}  style={styleEdit} onMouseEnter={()=>sethoverIcons({...hoverIcons,edit:true})} onMouseLeave={()=>sethoverIcons({...hoverIcons,edit:false})}/>\n\n                        </div>\n\n                    }\n                <Divider variant=\"middle\" style={{marginTop:'10px',marginLeft:'-10px'}} />\n\n                <p style={{display:'inline-block',wordWrap:'break-word',whiteSpace:'initial',overflowWrap:\"break-word\",padding:'10px',fontSize:'15px'}}>{content}</p>\n                </div>\n                <section style={{float:'right',marginRight:'-10px',paddingTop:'10px',display:'flex',justifyContent:'flex-end'}}>\n                        <DownloadIcon  style={styleDonwload} onMouseEnter={()=>sethoverIcons({...hoverIcons,download:true})} onMouseLeave={()=>sethoverIcons({...hoverIcons,download:false})} />\n\n                  \n                        <DeleteIcon  style={styleDelete} onMouseEnter={()=>sethoverIcons({...hoverIcons,delete:true})} onMouseLeave={()=>sethoverIcons({...hoverIcons,delete:false})}/>\n            \n                </section>\n            </div> \n        </Paper>\n    )\n}\n\nexport default SingleFav\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Profile\\PasswordSection.js",["936","937","938","939","940","941"],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Profile\\AccountInfoSection.js",["942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962"],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\Profile\\Plans.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\SingleRow.js",["963","964","965","966"],"// this component i use while displaying the workspaces data ( single workspace)\n// accept an object of workspace as props\n\nimport { Badge, Divider, Grid, IconButton, TextField } from '@material-ui/core'\nimport React from 'react'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {ReactComponent as DeleteIcon} from '../../Assets/Icons/svg/fi-rs-trash.svg';\nimport {ReactComponent as EditIcon} from '../../Assets/Icons/svg/fi-rs-pencil.svg';\nimport {ReactComponent as SaveIcon} from '../../Assets/Icons/svg/fi-rs-disk.svg';\n\n// import SaveIcon from '@material-ui/icons/Save';\nimport CustomCard from '../Results/CustomCard';\nimport CustomBadge from './CustomBadge';\nimport EmptyCustomBadge from './EmptyCustomBadge';\nfunction SingleRow({workspace}) {\n\n    const [edit, setedit] = React.useState(false);\n    const [hovred, sethovred] = React.useState({edit:false,delete:false})\n\n    const EdithoverStyle={\n        fill:!hovred.edit?'#D9DDFB':'#6A7BFF',\n        transition:'0.5s',\n        cursor:'pointer',\n        marginRight:'15px',\n        width:20,height:24\n    }\n    const DeletehoverStyle={\n        fill:!hovred.delete?'#D9DDFB':'#6A7BFF',\n        transition:'0.5s',\n        cursor:'pointer',\n        marginRight:'15px',\n        width:20,height:24\n    }\n\n\n    const save_edit= ()=>{\n        setedit(false);\n    }\n\n    return (\n        <>\n    \n        <Grid item md={12} style={{display:'flex',justifyContent:'space-between',marginTop:'20px'}}>\n               \n               {\n                    !edit?\n                        <section style={{display:'flex'}}>\n                            {workspace.isActive && <CustomBadge /> }\n                            {!workspace.isActive && <EmptyCustomBadge /> }\n                            <span style={{fontSize:'18px'}}>{workspace.name}</span>\n                        </section>\n                    :\n                    <TextField style={{marginLeft:'45px',marginBottom:'18px'}} defaultValue={workspace.name} />\n\n               } \n                <div>\n                    {\n                         !edit?\n                         <EditIcon onClick={()=>setedit(true)} fontSize='small' style={EdithoverStyle} onMouseEnter={()=>sethovred({...hovred,edit:true})} onMouseLeave={()=>sethovred({...hovred,edit:false})} />\n                         :\n                         <SaveIcon onClick={()=>save_edit()} fontSize='small' style={{ cursor:'pointer',marginRight:'15px',fill:'#6A7BFF', width:20,height:24}} />\n\n                    }\n             \n        \n                    <DeleteIcon fontSize='small' style={DeletehoverStyle} onMouseEnter={()=>sethovred({...hovred,delete:true})} onMouseLeave={()=>sethovred({...hovred,delete:false})}/>\n             \n                </div>\n            \n\n        </Grid>\n        {\n            !edit &&\n            <Divider variant=\"middle\" style={{marginTop:'18px',marginLeft:'40px'}}/>\n\n        }\n\n        </>\n    )\n}\n\nexport default SingleRow\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\NewWorkSpace.js",["967","968","969","970","971"],"// the component that i use while creating new workspace \n\n\n\nimport React from 'react'\nimport {ReactComponent as DeleteIcon} from '../../Assets/Icons/svg/fi-rs-trash.svg';\nimport {ReactComponent as EditIcon} from '../../Assets/Icons/svg/fi-rs-pencil.svg';\nimport {ReactComponent as SaveIcon} from '../../Assets/Icons/svg/fi-rs-disk.svg';\nimport { Badge, Divider, Grid, IconButton, TextField } from '@material-ui/core'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n// import SaveIcon from '@material-ui/icons/Save';\n\nfunction NewWorkSpace({push_new,isNewSetter}) {\n\n\n    //const [edit, setedit] = React.useState(false);\n    const [hovred, sethovred] = React.useState({edit:false,delete:false})\n    const [inputValue, setinputValue] = React.useState('')\n    const [error, seterror] = React.useState(false)\n\n    const DeletehoverStyle={\n        fill:!hovred.delete?'#D9DDFB':'#6A7BFF',\n        transition:'0.5s',\n        cursor:'pointer',\n        marginRight:'15px',\n        width:20,height:24\n    }\n\n\n    const save_edit= ()=>{\n        if(inputValue.length>0){\n            push_new(inputValue)\n            setinputValue('');\n        }\n        else \n            seterror(true)\n       \n\n    }\n\n    const cancel= ()=>{\n        isNewSetter(false);\n        setinputValue('');\n    }\n\n    const handleChange = (e)=>{\n        setinputValue(e.target.value)\n    }\n    return (\n        <div>\n             <Grid item md={12} style={{display:'flex',justifyContent:'space-between',marginTop:'20px'}}>\n               \n               \n                    {/* <TextField label='Add New  Workspace Name' style={{marginLeft:'45px',marginBottom:'18px'}}/> */}\n                    <input onChange={(e)=>handleChange(e)} value={inputValue} placeholder='Add New  Workspace Name' style={{border:'none', outline:'none',borderRadius:'5px',padding:'5px',marginLeft:'45px',marginBottom:'18px'}} />\n\n                <div>\n                    \n            \n                        \n                    <SaveIcon  onClick={()=>save_edit()} fontSize='small' style={{ cursor:'pointer',marginRight:'15px',fill:'#6A7BFF', width:20,height:24}} />\n                    \n             \n        \n                    <DeleteIcon onClick={()=>cancel()} fontSize='small' style={DeletehoverStyle} onMouseEnter={()=>sethovred({...hovred,delete:true})} onMouseLeave={()=>sethovred({...hovred,delete:false})}/>\n             \n                </div>\n            \n\n        </Grid>\n        {\n            error && \n            <span style={{color:'#ff4a4a'}}>Empty names not allowed !</span>\n        }\n        <Divider variant=\"middle\" style={{marginTop:'5px',marginLeft:'40px'}}/>\n\n        </div>\n    )\n}\n\nexport default NewWorkSpace\n","C:\\Users\\skand\\Desktop\\pluma-redux\\src\\redux\\actions\\userActions.js",["972","973","974","975","976"],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\EmptyCustomBadge.js",[],"C:\\Users\\skand\\Desktop\\pluma-redux\\src\\Components\\AddWorkspaces\\CustomBadge.js",[],{"ruleId":"977","replacedBy":"978"},{"ruleId":"979","replacedBy":"980"},{"ruleId":"981","severity":1,"message":"982","line":6,"column":33,"nodeType":"983","messageId":"984","endLine":6,"endColumn":41},{"ruleId":"981","severity":1,"message":"985","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":14},{"ruleId":"981","severity":1,"message":"986","line":11,"column":8,"nodeType":"983","messageId":"984","endLine":11,"endColumn":22},{"ruleId":"981","severity":1,"message":"987","line":19,"column":9,"nodeType":"983","messageId":"984","endLine":19,"endColumn":14},{"ruleId":"981","severity":1,"message":"988","line":1,"column":17,"nodeType":"983","messageId":"984","endLine":1,"endColumn":26},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"991","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":12},{"ruleId":"981","severity":1,"message":"992","line":14,"column":8,"nodeType":"983","messageId":"984","endLine":14,"endColumn":22},{"ruleId":"981","severity":1,"message":"993","line":18,"column":8,"nodeType":"983","messageId":"984","endLine":18,"endColumn":12},{"ruleId":"981","severity":1,"message":"994","line":20,"column":8,"nodeType":"983","messageId":"984","endLine":20,"endColumn":16},{"ruleId":"981","severity":1,"message":"995","line":21,"column":8,"nodeType":"983","messageId":"984","endLine":21,"endColumn":18},{"ruleId":"981","severity":1,"message":"996","line":24,"column":8,"nodeType":"983","messageId":"984","endLine":24,"endColumn":13},{"ruleId":"981","severity":1,"message":"997","line":25,"column":10,"nodeType":"983","messageId":"984","endLine":25,"endColumn":13},{"ruleId":"981","severity":1,"message":"998","line":26,"column":8,"nodeType":"983","messageId":"984","endLine":26,"endColumn":21},{"ruleId":"981","severity":1,"message":"999","line":27,"column":10,"nodeType":"983","messageId":"984","endLine":27,"endColumn":20},{"ruleId":"981","severity":1,"message":"1000","line":30,"column":28,"nodeType":"983","messageId":"984","endLine":30,"endColumn":36},{"ruleId":"981","severity":1,"message":"1001","line":31,"column":10,"nodeType":"983","messageId":"984","endLine":31,"endColumn":20},{"ruleId":"981","severity":1,"message":"1002","line":31,"column":22,"nodeType":"983","messageId":"984","endLine":31,"endColumn":26},{"ruleId":"981","severity":1,"message":"1003","line":31,"column":28,"nodeType":"983","messageId":"984","endLine":31,"endColumn":36},{"ruleId":"981","severity":1,"message":"1004","line":31,"column":38,"nodeType":"983","messageId":"984","endLine":31,"endColumn":52},{"ruleId":"981","severity":1,"message":"1005","line":31,"column":54,"nodeType":"983","messageId":"984","endLine":31,"endColumn":68},{"ruleId":"981","severity":1,"message":"1006","line":34,"column":10,"nodeType":"983","messageId":"984","endLine":34,"endColumn":19},{"ruleId":"981","severity":1,"message":"1007","line":35,"column":10,"nodeType":"983","messageId":"984","endLine":35,"endColumn":20},{"ruleId":"981","severity":1,"message":"1008","line":56,"column":3,"nodeType":"983","messageId":"984","endLine":56,"endColumn":10},{"ruleId":"981","severity":1,"message":"1009","line":136,"column":9,"nodeType":"983","messageId":"984","endLine":136,"endColumn":16},{"ruleId":"981","severity":1,"message":"1010","line":137,"column":9,"nodeType":"983","messageId":"984","endLine":137,"endColumn":16},{"ruleId":"981","severity":1,"message":"1011","line":6,"column":8,"nodeType":"983","messageId":"984","endLine":6,"endColumn":11},{"ruleId":"981","severity":1,"message":"1012","line":7,"column":10,"nodeType":"983","messageId":"984","endLine":7,"endColumn":21},{"ruleId":"981","severity":1,"message":"989","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":16},{"ruleId":"981","severity":1,"message":"991","line":11,"column":8,"nodeType":"983","messageId":"984","endLine":11,"endColumn":12},{"ruleId":"981","severity":1,"message":"992","line":15,"column":8,"nodeType":"983","messageId":"984","endLine":15,"endColumn":22},{"ruleId":"981","severity":1,"message":"995","line":22,"column":8,"nodeType":"983","messageId":"984","endLine":22,"endColumn":18},{"ruleId":"981","severity":1,"message":"1011","line":23,"column":8,"nodeType":"983","messageId":"984","endLine":23,"endColumn":11},{"ruleId":"981","severity":1,"message":"996","line":26,"column":8,"nodeType":"983","messageId":"984","endLine":26,"endColumn":13},{"ruleId":"981","severity":1,"message":"997","line":27,"column":10,"nodeType":"983","messageId":"984","endLine":27,"endColumn":13},{"ruleId":"981","severity":1,"message":"998","line":28,"column":8,"nodeType":"983","messageId":"984","endLine":28,"endColumn":21},{"ruleId":"981","severity":1,"message":"999","line":29,"column":10,"nodeType":"983","messageId":"984","endLine":29,"endColumn":20},{"ruleId":"981","severity":1,"message":"1000","line":32,"column":28,"nodeType":"983","messageId":"984","endLine":32,"endColumn":36},{"ruleId":"981","severity":1,"message":"1001","line":33,"column":10,"nodeType":"983","messageId":"984","endLine":33,"endColumn":20},{"ruleId":"981","severity":1,"message":"1002","line":33,"column":22,"nodeType":"983","messageId":"984","endLine":33,"endColumn":26},{"ruleId":"981","severity":1,"message":"1003","line":33,"column":28,"nodeType":"983","messageId":"984","endLine":33,"endColumn":36},{"ruleId":"981","severity":1,"message":"1008","line":57,"column":3,"nodeType":"983","messageId":"984","endLine":57,"endColumn":10},{"ruleId":"981","severity":1,"message":"1013","line":64,"column":10,"nodeType":"983","messageId":"984","endLine":64,"endColumn":21},{"ruleId":"981","severity":1,"message":"1014","line":149,"column":17,"nodeType":"983","messageId":"984","endLine":149,"endColumn":25},{"ruleId":"981","severity":1,"message":"1015","line":150,"column":9,"nodeType":"983","messageId":"984","endLine":150,"endColumn":12},{"ruleId":"981","severity":1,"message":"1016","line":165,"column":10,"nodeType":"983","messageId":"984","endLine":165,"endColumn":18},{"ruleId":"981","severity":1,"message":"1017","line":165,"column":20,"nodeType":"983","messageId":"984","endLine":165,"endColumn":28},{"ruleId":"981","severity":1,"message":"1018","line":172,"column":18,"nodeType":"983","messageId":"984","endLine":172,"endColumn":27},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"991","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":12},{"ruleId":"981","severity":1,"message":"992","line":14,"column":8,"nodeType":"983","messageId":"984","endLine":14,"endColumn":22},{"ruleId":"981","severity":1,"message":"993","line":18,"column":8,"nodeType":"983","messageId":"984","endLine":18,"endColumn":12},{"ruleId":"981","severity":1,"message":"994","line":20,"column":8,"nodeType":"983","messageId":"984","endLine":20,"endColumn":16},{"ruleId":"981","severity":1,"message":"995","line":21,"column":8,"nodeType":"983","messageId":"984","endLine":21,"endColumn":18},{"ruleId":"981","severity":1,"message":"996","line":24,"column":8,"nodeType":"983","messageId":"984","endLine":24,"endColumn":13},{"ruleId":"981","severity":1,"message":"997","line":25,"column":10,"nodeType":"983","messageId":"984","endLine":25,"endColumn":13},{"ruleId":"981","severity":1,"message":"998","line":26,"column":8,"nodeType":"983","messageId":"984","endLine":26,"endColumn":21},{"ruleId":"981","severity":1,"message":"999","line":27,"column":10,"nodeType":"983","messageId":"984","endLine":27,"endColumn":20},{"ruleId":"981","severity":1,"message":"1000","line":30,"column":28,"nodeType":"983","messageId":"984","endLine":30,"endColumn":36},{"ruleId":"981","severity":1,"message":"1001","line":31,"column":10,"nodeType":"983","messageId":"984","endLine":31,"endColumn":20},{"ruleId":"981","severity":1,"message":"1002","line":31,"column":22,"nodeType":"983","messageId":"984","endLine":31,"endColumn":26},{"ruleId":"981","severity":1,"message":"1003","line":31,"column":28,"nodeType":"983","messageId":"984","endLine":31,"endColumn":36},{"ruleId":"981","severity":1,"message":"1004","line":31,"column":38,"nodeType":"983","messageId":"984","endLine":31,"endColumn":52},{"ruleId":"981","severity":1,"message":"1005","line":31,"column":54,"nodeType":"983","messageId":"984","endLine":31,"endColumn":68},{"ruleId":"981","severity":1,"message":"1006","line":34,"column":10,"nodeType":"983","messageId":"984","endLine":34,"endColumn":19},{"ruleId":"981","severity":1,"message":"1007","line":35,"column":10,"nodeType":"983","messageId":"984","endLine":35,"endColumn":20},{"ruleId":"981","severity":1,"message":"1008","line":56,"column":3,"nodeType":"983","messageId":"984","endLine":56,"endColumn":10},{"ruleId":"981","severity":1,"message":"1019","line":4,"column":8,"nodeType":"983","messageId":"984","endLine":4,"endColumn":12},{"ruleId":"981","severity":1,"message":"1020","line":4,"column":8,"nodeType":"983","messageId":"984","endLine":4,"endColumn":13},{"ruleId":"981","severity":1,"message":"1001","line":2,"column":5,"nodeType":"983","messageId":"984","endLine":2,"endColumn":15},{"ruleId":"981","severity":1,"message":"1002","line":3,"column":5,"nodeType":"983","messageId":"984","endLine":3,"endColumn":9},{"ruleId":"981","severity":1,"message":"1004","line":5,"column":5,"nodeType":"983","messageId":"984","endLine":5,"endColumn":19},{"ruleId":"981","severity":1,"message":"1005","line":6,"column":5,"nodeType":"983","messageId":"984","endLine":6,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":2,"column":5,"nodeType":"983","messageId":"984","endLine":2,"endColumn":15},{"ruleId":"981","severity":1,"message":"1003","line":4,"column":5,"nodeType":"983","messageId":"984","endLine":4,"endColumn":13},{"ruleId":"981","severity":1,"message":"1004","line":5,"column":5,"nodeType":"983","messageId":"984","endLine":5,"endColumn":19},{"ruleId":"981","severity":1,"message":"1005","line":6,"column":5,"nodeType":"983","messageId":"984","endLine":6,"endColumn":19},{"ruleId":"981","severity":1,"message":"1021","line":1,"column":10,"nodeType":"983","messageId":"984","endLine":1,"endColumn":14},{"ruleId":"981","severity":1,"message":"1022","line":6,"column":7,"nodeType":"983","messageId":"984","endLine":6,"endColumn":19},{"ruleId":"981","severity":1,"message":"1023","line":7,"column":8,"nodeType":"983","messageId":"984","endLine":7,"endColumn":14},{"ruleId":"981","severity":1,"message":"1024","line":26,"column":9,"nodeType":"983","messageId":"984","endLine":26,"endColumn":16},{"ruleId":"981","severity":1,"message":"1025","line":24,"column":8,"nodeType":"983","messageId":"984","endLine":24,"endColumn":18},{"ruleId":"981","severity":1,"message":"1001","line":27,"column":9,"nodeType":"983","messageId":"984","endLine":27,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":27,"column":20,"nodeType":"983","messageId":"984","endLine":27,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":27,"column":25,"nodeType":"983","messageId":"984","endLine":27,"endColumn":33},{"ruleId":"1026","severity":1,"message":"1027","line":127,"column":3,"nodeType":"1028","messageId":"1029","endLine":127,"endColumn":14},{"ruleId":"981","severity":1,"message":"1030","line":163,"column":10,"nodeType":"983","messageId":"984","endLine":163,"endColumn":26},{"ruleId":"981","severity":1,"message":"1031","line":165,"column":15,"nodeType":"983","messageId":"984","endLine":165,"endColumn":22},{"ruleId":"981","severity":1,"message":"1032","line":167,"column":20,"nodeType":"983","messageId":"984","endLine":167,"endColumn":32},{"ruleId":"981","severity":1,"message":"1033","line":168,"column":24,"nodeType":"983","messageId":"984","endLine":168,"endColumn":40},{"ruleId":"1034","severity":1,"message":"1035","line":181,"column":26,"nodeType":"1036","messageId":"1037","endLine":181,"endColumn":28},{"ruleId":"1038","severity":1,"message":"1039","line":186,"column":70,"nodeType":"1040","messageId":"1029","endLine":186,"endColumn":72},{"ruleId":"1034","severity":1,"message":"1035","line":189,"column":16,"nodeType":"1036","messageId":"1037","endLine":189,"endColumn":18},{"ruleId":"981","severity":1,"message":"1041","line":201,"column":9,"nodeType":"983","messageId":"984","endLine":201,"endColumn":35},{"ruleId":"981","severity":1,"message":"1042","line":226,"column":7,"nodeType":"983","messageId":"984","endLine":226,"endColumn":27},{"ruleId":"981","severity":1,"message":"1043","line":229,"column":7,"nodeType":"983","messageId":"984","endLine":229,"endColumn":28},{"ruleId":"981","severity":1,"message":"1044","line":267,"column":9,"nodeType":"983","messageId":"984","endLine":267,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":2,"column":5,"nodeType":"983","messageId":"984","endLine":2,"endColumn":15},{"ruleId":"981","severity":1,"message":"1002","line":3,"column":5,"nodeType":"983","messageId":"984","endLine":3,"endColumn":9},{"ruleId":"981","severity":1,"message":"1004","line":5,"column":5,"nodeType":"983","messageId":"984","endLine":5,"endColumn":19},{"ruleId":"981","severity":1,"message":"1005","line":6,"column":5,"nodeType":"983","messageId":"984","endLine":6,"endColumn":19},{"ruleId":"981","severity":1,"message":"1045","line":4,"column":10,"nodeType":"983","messageId":"984","endLine":4,"endColumn":19},{"ruleId":"981","severity":1,"message":"1023","line":7,"column":10,"nodeType":"983","messageId":"984","endLine":7,"endColumn":16},{"ruleId":"981","severity":1,"message":"1046","line":7,"column":24,"nodeType":"983","messageId":"984","endLine":7,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":42,"nodeType":"983","messageId":"984","endLine":7,"endColumn":51},{"ruleId":"981","severity":1,"message":"1048","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":18},{"ruleId":"981","severity":1,"message":"1001","line":12,"column":9,"nodeType":"983","messageId":"984","endLine":12,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":12,"column":20,"nodeType":"983","messageId":"984","endLine":12,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":12,"column":25,"nodeType":"983","messageId":"984","endLine":12,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":12,"column":49,"nodeType":"983","messageId":"984","endLine":12,"endColumn":63},{"ruleId":"981","severity":1,"message":"1024","line":25,"column":11,"nodeType":"983","messageId":"984","endLine":25,"endColumn":18},{"ruleId":"981","severity":1,"message":"1049","line":27,"column":12,"nodeType":"983","messageId":"984","endLine":27,"endColumn":16},{"ruleId":"981","severity":1,"message":"1050","line":29,"column":12,"nodeType":"983","messageId":"984","endLine":29,"endColumn":26},{"ruleId":"981","severity":1,"message":"1051","line":29,"column":28,"nodeType":"983","messageId":"984","endLine":29,"endColumn":45},{"ruleId":"981","severity":1,"message":"1052","line":30,"column":20,"nodeType":"983","messageId":"984","endLine":30,"endColumn":30},{"ruleId":"981","severity":1,"message":"1053","line":32,"column":13,"nodeType":"983","messageId":"984","endLine":32,"endColumn":18},{"ruleId":"981","severity":1,"message":"1054","line":53,"column":11,"nodeType":"983","messageId":"984","endLine":53,"endColumn":27},{"ruleId":"1055","severity":1,"message":"1056","line":62,"column":11,"nodeType":"1057","endLine":84,"endColumn":6},{"ruleId":"981","severity":1,"message":"1058","line":91,"column":7,"nodeType":"983","messageId":"984","endLine":91,"endColumn":17},{"ruleId":"981","severity":1,"message":"1059","line":94,"column":7,"nodeType":"983","messageId":"984","endLine":94,"endColumn":15},{"ruleId":"1026","severity":1,"message":"1060","line":100,"column":108,"nodeType":"1028","messageId":"1029","endLine":100,"endColumn":118},{"ruleId":"981","severity":1,"message":"1025","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":18},{"ruleId":"981","severity":1,"message":"1061","line":11,"column":8,"nodeType":"983","messageId":"984","endLine":11,"endColumn":22},{"ruleId":"981","severity":1,"message":"1062","line":14,"column":7,"nodeType":"983","messageId":"984","endLine":14,"endColumn":16},{"ruleId":"981","severity":1,"message":"1063","line":31,"column":7,"nodeType":"983","messageId":"984","endLine":31,"endColumn":23},{"ruleId":"981","severity":1,"message":"1064","line":49,"column":7,"nodeType":"983","messageId":"984","endLine":49,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":8,"column":24,"nodeType":"983","messageId":"984","endLine":8,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":8,"column":42,"nodeType":"983","messageId":"984","endLine":8,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":20,"column":9,"nodeType":"983","messageId":"984","endLine":20,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":20,"column":20,"nodeType":"983","messageId":"984","endLine":20,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":20,"column":25,"nodeType":"983","messageId":"984","endLine":20,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":5,"column":24,"nodeType":"983","messageId":"984","endLine":5,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":5,"column":42,"nodeType":"983","messageId":"984","endLine":5,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":7,"column":8,"nodeType":"983","messageId":"984","endLine":7,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":16},{"ruleId":"981","severity":1,"message":"1065","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":16,"column":9,"nodeType":"983","messageId":"984","endLine":16,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":16,"column":20,"nodeType":"983","messageId":"984","endLine":16,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":16,"column":25,"nodeType":"983","messageId":"984","endLine":16,"endColumn":33},{"ruleId":"981","severity":1,"message":"1066","line":19,"column":8,"nodeType":"983","messageId":"984","endLine":19,"endColumn":21},{"ruleId":"981","severity":1,"message":"1067","line":54,"column":12,"nodeType":"983","messageId":"984","endLine":54,"endColumn":19},{"ruleId":"981","severity":1,"message":"1068","line":56,"column":11,"nodeType":"983","messageId":"984","endLine":56,"endColumn":21},{"ruleId":"981","severity":1,"message":"1069","line":58,"column":11,"nodeType":"983","messageId":"984","endLine":58,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":7,"column":24,"nodeType":"983","messageId":"984","endLine":7,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":42,"nodeType":"983","messageId":"984","endLine":7,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":19,"column":9,"nodeType":"983","messageId":"984","endLine":19,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":19,"column":20,"nodeType":"983","messageId":"984","endLine":19,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":19,"column":25,"nodeType":"983","messageId":"984","endLine":19,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":18,"column":9,"nodeType":"983","messageId":"984","endLine":18,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":18,"column":20,"nodeType":"983","messageId":"984","endLine":18,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":18,"column":25,"nodeType":"983","messageId":"984","endLine":18,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":18,"column":9,"nodeType":"983","messageId":"984","endLine":18,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":18,"column":20,"nodeType":"983","messageId":"984","endLine":18,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":18,"column":25,"nodeType":"983","messageId":"984","endLine":18,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":7,"column":24,"nodeType":"983","messageId":"984","endLine":7,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":42,"nodeType":"983","messageId":"984","endLine":7,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":19,"column":9,"nodeType":"983","messageId":"984","endLine":19,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":19,"column":20,"nodeType":"983","messageId":"984","endLine":19,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":19,"column":25,"nodeType":"983","messageId":"984","endLine":19,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":5,"column":24,"nodeType":"983","messageId":"984","endLine":5,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":5,"column":42,"nodeType":"983","messageId":"984","endLine":5,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":17,"column":9,"nodeType":"983","messageId":"984","endLine":17,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":17,"column":20,"nodeType":"983","messageId":"984","endLine":17,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":17,"column":25,"nodeType":"983","messageId":"984","endLine":17,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":7,"column":24,"nodeType":"983","messageId":"984","endLine":7,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":42,"nodeType":"983","messageId":"984","endLine":7,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":19,"column":9,"nodeType":"983","messageId":"984","endLine":19,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":19,"column":20,"nodeType":"983","messageId":"984","endLine":19,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":19,"column":25,"nodeType":"983","messageId":"984","endLine":19,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1065","line":11,"column":8,"nodeType":"983","messageId":"984","endLine":11,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":18,"column":9,"nodeType":"983","messageId":"984","endLine":18,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":18,"column":20,"nodeType":"983","messageId":"984","endLine":18,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":18,"column":25,"nodeType":"983","messageId":"984","endLine":18,"endColumn":33},{"ruleId":"981","severity":1,"message":"1067","line":54,"column":12,"nodeType":"983","messageId":"984","endLine":54,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":59,"column":11,"nodeType":"983","messageId":"984","endLine":59,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":7,"column":24,"nodeType":"983","messageId":"984","endLine":7,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":42,"nodeType":"983","messageId":"984","endLine":7,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":16},{"ruleId":"981","severity":1,"message":"1065","line":12,"column":8,"nodeType":"983","messageId":"984","endLine":12,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":19,"column":9,"nodeType":"983","messageId":"984","endLine":19,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":19,"column":20,"nodeType":"983","messageId":"984","endLine":19,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":19,"column":25,"nodeType":"983","messageId":"984","endLine":19,"endColumn":33},{"ruleId":"981","severity":1,"message":"1067","line":55,"column":12,"nodeType":"983","messageId":"984","endLine":55,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":60,"column":11,"nodeType":"983","messageId":"984","endLine":60,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1001","line":17,"column":9,"nodeType":"983","messageId":"984","endLine":17,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":17,"column":20,"nodeType":"983","messageId":"984","endLine":17,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":17,"column":25,"nodeType":"983","messageId":"984","endLine":17,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":17,"column":49,"nodeType":"983","messageId":"984","endLine":17,"endColumn":63},{"ruleId":"981","severity":1,"message":"1067","line":70,"column":12,"nodeType":"983","messageId":"984","endLine":70,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":73,"column":11,"nodeType":"983","messageId":"984","endLine":73,"endColumn":23},{"ruleId":"1034","severity":1,"message":"1035","line":80,"column":40,"nodeType":"1036","messageId":"1037","endLine":80,"endColumn":42},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1001","line":18,"column":9,"nodeType":"983","messageId":"984","endLine":18,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":18,"column":20,"nodeType":"983","messageId":"984","endLine":18,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":18,"column":25,"nodeType":"983","messageId":"984","endLine":18,"endColumn":33},{"ruleId":"981","severity":1,"message":"1067","line":54,"column":12,"nodeType":"983","messageId":"984","endLine":54,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":59,"column":11,"nodeType":"983","messageId":"984","endLine":59,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":7,"column":24,"nodeType":"983","messageId":"984","endLine":7,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":42,"nodeType":"983","messageId":"984","endLine":7,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":16},{"ruleId":"981","severity":1,"message":"1001","line":18,"column":9,"nodeType":"983","messageId":"984","endLine":18,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":18,"column":20,"nodeType":"983","messageId":"984","endLine":18,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":18,"column":25,"nodeType":"983","messageId":"984","endLine":18,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":18,"column":49,"nodeType":"983","messageId":"984","endLine":18,"endColumn":63},{"ruleId":"981","severity":1,"message":"1067","line":71,"column":12,"nodeType":"983","messageId":"984","endLine":71,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":74,"column":11,"nodeType":"983","messageId":"984","endLine":74,"endColumn":23},{"ruleId":"1034","severity":1,"message":"1035","line":81,"column":40,"nodeType":"1036","messageId":"1037","endLine":81,"endColumn":42},{"ruleId":"981","severity":1,"message":"1046","line":7,"column":24,"nodeType":"983","messageId":"984","endLine":7,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":42,"nodeType":"983","messageId":"984","endLine":7,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":16},{"ruleId":"981","severity":1,"message":"1065","line":12,"column":8,"nodeType":"983","messageId":"984","endLine":12,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":19,"column":9,"nodeType":"983","messageId":"984","endLine":19,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":19,"column":20,"nodeType":"983","messageId":"984","endLine":19,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":19,"column":25,"nodeType":"983","messageId":"984","endLine":19,"endColumn":33},{"ruleId":"981","severity":1,"message":"1067","line":55,"column":12,"nodeType":"983","messageId":"984","endLine":55,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":60,"column":11,"nodeType":"983","messageId":"984","endLine":60,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1001","line":17,"column":9,"nodeType":"983","messageId":"984","endLine":17,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":17,"column":20,"nodeType":"983","messageId":"984","endLine":17,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":17,"column":25,"nodeType":"983","messageId":"984","endLine":17,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":17,"column":49,"nodeType":"983","messageId":"984","endLine":17,"endColumn":63},{"ruleId":"981","severity":1,"message":"1067","line":70,"column":12,"nodeType":"983","messageId":"984","endLine":70,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":73,"column":11,"nodeType":"983","messageId":"984","endLine":73,"endColumn":23},{"ruleId":"1034","severity":1,"message":"1035","line":80,"column":40,"nodeType":"1036","messageId":"1037","endLine":80,"endColumn":42},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1001","line":17,"column":9,"nodeType":"983","messageId":"984","endLine":17,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":17,"column":20,"nodeType":"983","messageId":"984","endLine":17,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":17,"column":25,"nodeType":"983","messageId":"984","endLine":17,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":17,"column":49,"nodeType":"983","messageId":"984","endLine":17,"endColumn":63},{"ruleId":"981","severity":1,"message":"1067","line":70,"column":12,"nodeType":"983","messageId":"984","endLine":70,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":73,"column":11,"nodeType":"983","messageId":"984","endLine":73,"endColumn":23},{"ruleId":"1034","severity":1,"message":"1035","line":80,"column":40,"nodeType":"1036","messageId":"1037","endLine":80,"endColumn":42},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":16,"column":9,"nodeType":"983","messageId":"984","endLine":16,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":16,"column":20,"nodeType":"983","messageId":"984","endLine":16,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":16,"column":25,"nodeType":"983","messageId":"984","endLine":16,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1001","line":16,"column":9,"nodeType":"983","messageId":"984","endLine":16,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":16,"column":20,"nodeType":"983","messageId":"984","endLine":16,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":16,"column":25,"nodeType":"983","messageId":"984","endLine":16,"endColumn":33},{"ruleId":"981","severity":1,"message":"1067","line":53,"column":12,"nodeType":"983","messageId":"984","endLine":53,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":58,"column":11,"nodeType":"983","messageId":"984","endLine":58,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":17,"column":9,"nodeType":"983","messageId":"984","endLine":17,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":17,"column":20,"nodeType":"983","messageId":"984","endLine":17,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":17,"column":25,"nodeType":"983","messageId":"984","endLine":17,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":16,"column":9,"nodeType":"983","messageId":"984","endLine":16,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":16,"column":20,"nodeType":"983","messageId":"984","endLine":16,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":16,"column":25,"nodeType":"983","messageId":"984","endLine":16,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1065","line":11,"column":8,"nodeType":"983","messageId":"984","endLine":11,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":15,"column":9,"nodeType":"983","messageId":"984","endLine":15,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":15,"column":20,"nodeType":"983","messageId":"984","endLine":15,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":15,"column":25,"nodeType":"983","messageId":"984","endLine":15,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":15,"column":49,"nodeType":"983","messageId":"984","endLine":15,"endColumn":63},{"ruleId":"981","severity":1,"message":"1067","line":50,"column":12,"nodeType":"983","messageId":"984","endLine":50,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":54,"column":11,"nodeType":"983","messageId":"984","endLine":54,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":5,"column":24,"nodeType":"983","messageId":"984","endLine":5,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":5,"column":42,"nodeType":"983","messageId":"984","endLine":5,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":14,"column":9,"nodeType":"983","messageId":"984","endLine":14,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":14,"column":20,"nodeType":"983","messageId":"984","endLine":14,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":14,"column":25,"nodeType":"983","messageId":"984","endLine":14,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":5,"column":24,"nodeType":"983","messageId":"984","endLine":5,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":5,"column":42,"nodeType":"983","messageId":"984","endLine":5,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":14,"column":9,"nodeType":"983","messageId":"984","endLine":14,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":14,"column":20,"nodeType":"983","messageId":"984","endLine":14,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":14,"column":25,"nodeType":"983","messageId":"984","endLine":14,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":5,"column":24,"nodeType":"983","messageId":"984","endLine":5,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":5,"column":42,"nodeType":"983","messageId":"984","endLine":5,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":16,"column":9,"nodeType":"983","messageId":"984","endLine":16,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":16,"column":20,"nodeType":"983","messageId":"984","endLine":16,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":16,"column":25,"nodeType":"983","messageId":"984","endLine":16,"endColumn":33},{"ruleId":"981","severity":1,"message":"1046","line":6,"column":24,"nodeType":"983","messageId":"984","endLine":6,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":42,"nodeType":"983","messageId":"984","endLine":6,"endColumn":51},{"ruleId":"981","severity":1,"message":"989","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"990","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":16},{"ruleId":"981","severity":1,"message":"1065","line":11,"column":8,"nodeType":"983","messageId":"984","endLine":11,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":16,"column":9,"nodeType":"983","messageId":"984","endLine":16,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":16,"column":20,"nodeType":"983","messageId":"984","endLine":16,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":16,"column":25,"nodeType":"983","messageId":"984","endLine":16,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":16,"column":49,"nodeType":"983","messageId":"984","endLine":16,"endColumn":63},{"ruleId":"981","severity":1,"message":"1067","line":53,"column":12,"nodeType":"983","messageId":"984","endLine":53,"endColumn":19},{"ruleId":"981","severity":1,"message":"1069","line":54,"column":11,"nodeType":"983","messageId":"984","endLine":54,"endColumn":23},{"ruleId":"981","severity":1,"message":"1046","line":5,"column":24,"nodeType":"983","messageId":"984","endLine":5,"endColumn":40},{"ruleId":"981","severity":1,"message":"1047","line":5,"column":42,"nodeType":"983","messageId":"984","endLine":5,"endColumn":51},{"ruleId":"981","severity":1,"message":"1001","line":17,"column":9,"nodeType":"983","messageId":"984","endLine":17,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":17,"column":20,"nodeType":"983","messageId":"984","endLine":17,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":17,"column":25,"nodeType":"983","messageId":"984","endLine":17,"endColumn":33},{"ruleId":"981","severity":1,"message":"1001","line":2,"column":5,"nodeType":"983","messageId":"984","endLine":2,"endColumn":15},{"ruleId":"981","severity":1,"message":"1002","line":3,"column":5,"nodeType":"983","messageId":"984","endLine":3,"endColumn":9},{"ruleId":"981","severity":1,"message":"1004","line":5,"column":5,"nodeType":"983","messageId":"984","endLine":5,"endColumn":19},{"ruleId":"981","severity":1,"message":"1005","line":6,"column":5,"nodeType":"983","messageId":"984","endLine":6,"endColumn":19},{"ruleId":"981","severity":1,"message":"1070","line":7,"column":10,"nodeType":"983","messageId":"984","endLine":7,"endColumn":20},{"ruleId":"981","severity":1,"message":"1025","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":18},{"ruleId":"981","severity":1,"message":"1001","line":8,"column":5,"nodeType":"983","messageId":"984","endLine":8,"endColumn":15},{"ruleId":"981","severity":1,"message":"1002","line":9,"column":5,"nodeType":"983","messageId":"984","endLine":9,"endColumn":9},{"ruleId":"981","severity":1,"message":"1003","line":10,"column":5,"nodeType":"983","messageId":"984","endLine":10,"endColumn":13},{"ruleId":"1034","severity":1,"message":"1035","line":28,"column":29,"nodeType":"1036","messageId":"1037","endLine":28,"endColumn":31},{"ruleId":"1034","severity":1,"message":"1035","line":36,"column":16,"nodeType":"1036","messageId":"1037","endLine":36,"endColumn":18},{"ruleId":"981","severity":1,"message":"1071","line":8,"column":9,"nodeType":"983","messageId":"984","endLine":8,"endColumn":20},{"ruleId":"981","severity":1,"message":"1001","line":9,"column":9,"nodeType":"983","messageId":"984","endLine":9,"endColumn":19},{"ruleId":"981","severity":1,"message":"1002","line":9,"column":20,"nodeType":"983","messageId":"984","endLine":9,"endColumn":24},{"ruleId":"981","severity":1,"message":"1003","line":9,"column":25,"nodeType":"983","messageId":"984","endLine":9,"endColumn":33},{"ruleId":"981","severity":1,"message":"1005","line":9,"column":49,"nodeType":"983","messageId":"984","endLine":9,"endColumn":63},{"ruleId":"981","severity":1,"message":"1072","line":27,"column":9,"nodeType":"983","messageId":"984","endLine":27,"endColumn":13},{"ruleId":"981","severity":1,"message":"1073","line":29,"column":11,"nodeType":"983","messageId":"984","endLine":29,"endColumn":19},{"ruleId":"981","severity":1,"message":"1074","line":11,"column":19,"nodeType":"983","messageId":"984","endLine":11,"endColumn":23},{"ruleId":"981","severity":1,"message":"999","line":11,"column":25,"nodeType":"983","messageId":"984","endLine":11,"endColumn":35},{"ruleId":"981","severity":1,"message":"1075","line":12,"column":8,"nodeType":"983","messageId":"984","endLine":12,"endColumn":25},{"ruleId":"981","severity":1,"message":"1076","line":13,"column":8,"nodeType":"983","messageId":"984","endLine":13,"endColumn":19},{"ruleId":"981","severity":1,"message":"1077","line":14,"column":27,"nodeType":"983","messageId":"984","endLine":14,"endColumn":37},{"ruleId":"1034","severity":1,"message":"1035","line":28,"column":20,"nodeType":"1036","messageId":"1037","endLine":28,"endColumn":22},{"ruleId":"981","severity":1,"message":"1001","line":16,"column":5,"nodeType":"983","messageId":"984","endLine":16,"endColumn":15},{"ruleId":"981","severity":1,"message":"1002","line":17,"column":5,"nodeType":"983","messageId":"984","endLine":17,"endColumn":9},{"ruleId":"981","severity":1,"message":"1003","line":18,"column":5,"nodeType":"983","messageId":"984","endLine":18,"endColumn":13},{"ruleId":"981","severity":1,"message":"1005","line":20,"column":5,"nodeType":"983","messageId":"984","endLine":20,"endColumn":19},{"ruleId":"981","severity":1,"message":"1031","line":55,"column":18,"nodeType":"983","messageId":"984","endLine":55,"endColumn":25},{"ruleId":"981","severity":1,"message":"1001","line":13,"column":5,"nodeType":"983","messageId":"984","endLine":13,"endColumn":15},{"ruleId":"981","severity":1,"message":"1002","line":14,"column":5,"nodeType":"983","messageId":"984","endLine":14,"endColumn":9},{"ruleId":"981","severity":1,"message":"1003","line":15,"column":5,"nodeType":"983","messageId":"984","endLine":15,"endColumn":13},{"ruleId":"981","severity":1,"message":"1078","line":20,"column":7,"nodeType":"983","messageId":"984","endLine":20,"endColumn":16},{"ruleId":"981","severity":1,"message":"1074","line":7,"column":19,"nodeType":"983","messageId":"984","endLine":7,"endColumn":23},{"ruleId":"981","severity":1,"message":"999","line":7,"column":25,"nodeType":"983","messageId":"984","endLine":7,"endColumn":35},{"ruleId":"981","severity":1,"message":"1047","line":7,"column":44,"nodeType":"983","messageId":"984","endLine":7,"endColumn":53},{"ruleId":"981","severity":1,"message":"1075","line":8,"column":8,"nodeType":"983","messageId":"984","endLine":8,"endColumn":25},{"ruleId":"981","severity":1,"message":"1076","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":19},{"ruleId":"981","severity":1,"message":"1079","line":15,"column":9,"nodeType":"983","messageId":"984","endLine":15,"endColumn":15},{"ruleId":"981","severity":1,"message":"1080","line":6,"column":61,"nodeType":"983","messageId":"984","endLine":6,"endColumn":71},{"ruleId":"981","severity":1,"message":"1047","line":6,"column":73,"nodeType":"983","messageId":"984","endLine":6,"endColumn":82},{"ruleId":"981","severity":1,"message":"999","line":9,"column":8,"nodeType":"983","messageId":"984","endLine":9,"endColumn":18},{"ruleId":"981","severity":1,"message":"1081","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":21},{"ruleId":"981","severity":1,"message":"1082","line":11,"column":8,"nodeType":"983","messageId":"984","endLine":11,"endColumn":18},{"ruleId":"981","severity":1,"message":"1012","line":15,"column":23,"nodeType":"983","messageId":"984","endLine":15,"endColumn":34},{"ruleId":"981","severity":1,"message":"1047","line":5,"column":45,"nodeType":"983","messageId":"984","endLine":5,"endColumn":54},{"ruleId":"981","severity":1,"message":"1083","line":8,"column":10,"nodeType":"983","messageId":"984","endLine":8,"endColumn":24},{"ruleId":"981","severity":1,"message":"1084","line":8,"column":26,"nodeType":"983","messageId":"984","endLine":8,"endColumn":43},{"ruleId":"981","severity":1,"message":"1085","line":9,"column":10,"nodeType":"983","messageId":"984","endLine":9,"endColumn":34},{"ruleId":"981","severity":1,"message":"1086","line":10,"column":3,"nodeType":"983","messageId":"984","endLine":10,"endColumn":30},{"ruleId":"981","severity":1,"message":"1087","line":11,"column":3,"nodeType":"983","messageId":"984","endLine":11,"endColumn":30},{"ruleId":"981","severity":1,"message":"1088","line":13,"column":3,"nodeType":"983","messageId":"984","endLine":13,"endColumn":22},{"ruleId":"981","severity":1,"message":"1089","line":14,"column":3,"nodeType":"983","messageId":"984","endLine":14,"endColumn":22},{"ruleId":"981","severity":1,"message":"1090","line":15,"column":2,"nodeType":"983","messageId":"984","endLine":15,"endColumn":18},{"ruleId":"981","severity":1,"message":"1091","line":16,"column":2,"nodeType":"983","messageId":"984","endLine":16,"endColumn":19},{"ruleId":"981","severity":1,"message":"1001","line":20,"column":5,"nodeType":"983","messageId":"984","endLine":20,"endColumn":15},{"ruleId":"981","severity":1,"message":"1002","line":21,"column":5,"nodeType":"983","messageId":"984","endLine":21,"endColumn":9},{"ruleId":"981","severity":1,"message":"1003","line":22,"column":5,"nodeType":"983","messageId":"984","endLine":22,"endColumn":13},{"ruleId":"981","severity":1,"message":"1004","line":23,"column":5,"nodeType":"983","messageId":"984","endLine":23,"endColumn":19},{"ruleId":"981","severity":1,"message":"1005","line":24,"column":5,"nodeType":"983","messageId":"984","endLine":24,"endColumn":19},{"ruleId":"981","severity":1,"message":"1006","line":26,"column":11,"nodeType":"983","messageId":"984","endLine":26,"endColumn":20},{"ruleId":"981","severity":1,"message":"1092","line":28,"column":9,"nodeType":"983","messageId":"984","endLine":28,"endColumn":15},{"ruleId":"981","severity":1,"message":"1093","line":51,"column":10,"nodeType":"983","messageId":"984","endLine":51,"endColumn":17},{"ruleId":"981","severity":1,"message":"1094","line":51,"column":19,"nodeType":"983","messageId":"984","endLine":51,"endColumn":29},{"ruleId":"981","severity":1,"message":"1095","line":57,"column":9,"nodeType":"983","messageId":"984","endLine":57,"endColumn":20},{"ruleId":"981","severity":1,"message":"1096","line":64,"column":9,"nodeType":"983","messageId":"984","endLine":64,"endColumn":19},{"ruleId":"981","severity":1,"message":"1097","line":4,"column":10,"nodeType":"983","messageId":"984","endLine":4,"endColumn":15},{"ruleId":"981","severity":1,"message":"999","line":4,"column":32,"nodeType":"983","messageId":"984","endLine":4,"endColumn":42},{"ruleId":"981","severity":1,"message":"1075","line":6,"column":8,"nodeType":"983","messageId":"984","endLine":6,"endColumn":25},{"ruleId":"981","severity":1,"message":"1098","line":12,"column":8,"nodeType":"983","messageId":"984","endLine":12,"endColumn":18},{"ruleId":"981","severity":1,"message":"1099","line":7,"column":27,"nodeType":"983","messageId":"984","endLine":7,"endColumn":35},{"ruleId":"981","severity":1,"message":"1097","line":9,"column":10,"nodeType":"983","messageId":"984","endLine":9,"endColumn":15},{"ruleId":"981","severity":1,"message":"999","line":9,"column":32,"nodeType":"983","messageId":"984","endLine":9,"endColumn":42},{"ruleId":"981","severity":1,"message":"1047","line":9,"column":44,"nodeType":"983","messageId":"984","endLine":9,"endColumn":53},{"ruleId":"981","severity":1,"message":"1075","line":10,"column":8,"nodeType":"983","messageId":"984","endLine":10,"endColumn":25},{"ruleId":"981","severity":1,"message":"1100","line":5,"column":3,"nodeType":"983","messageId":"984","endLine":5,"endColumn":28},{"ruleId":"981","severity":1,"message":"1101","line":6,"column":3,"nodeType":"983","messageId":"984","endLine":6,"endColumn":21},{"ruleId":"981","severity":1,"message":"1090","line":10,"column":3,"nodeType":"983","messageId":"984","endLine":10,"endColumn":19},{"ruleId":"981","severity":1,"message":"1089","line":11,"column":3,"nodeType":"983","messageId":"984","endLine":11,"endColumn":22},{"ruleId":"981","severity":1,"message":"1088","line":12,"column":3,"nodeType":"983","messageId":"984","endLine":12,"endColumn":22},"no-native-reassign",["1102"],"no-negated-in-lhs",["1103"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'SignIn' is defined but never used.","'ProtectedRoute' is defined but never used.","'token' is assigned a value but never used.","'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'AssignmentIcon' is defined but never used.","'auth' is defined but never used.","'useToken' is defined but never used.","'useGetUser' is defined but never used.","'axios' is defined but never used.","'uri' is defined but never used.","'ArrowBackIcon' is defined but never used.","'IconButton' is defined but never used.","'BackIcon' is defined but never used.","'RecoilRoot' is defined but never used.","'atom' is defined but never used.","'selector' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilValue' is defined but never used.","'userState' is defined but never used.","'updateUser' is defined but never used.","'zMotion' is defined but never used.","'success' is assigned a value but never used.","'history' is assigned a value but never used.","'jwt' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'_setUser' is assigned a value but never used.","'log' is assigned a value but never used.","'setToken' is assigned a value but never used.","'getToken' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'Swal' is defined but never used.","'React' is defined but never used.","'user' is defined but never used.","'initialState' is assigned a value but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.","'Typography' is defined but never used.","no-dupe-keys","Duplicate key 'drawerPaper'.","ObjectExpression","unexpected","'isOutputMenuOpen' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setLanguages' is assigned a value but never used.","'setResultsStatus' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'handleOutputActiveLanguage' is assigned a value but never used.","'handleOutputMenuOpen' is assigned a value but never used.","'handleOutputMenuClose' is assigned a value but never used.","'web_drawer' is assigned a value but never used.","'Container' is defined but never used.","'TextareaAutosize' is defined but never used.","'TextField' is defined but never used.","'Pagination' is defined but never used.","'page' is assigned a value but never used.","'itemsToDisplay' is assigned a value but never used.","'setitemsToDisplay' is assigned a value but never used.","'setResults' is assigned a value but never used.","'items' is assigned a value but never used.","'handlePageChange' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'data' array makes the dependencies of useEffect Hook (at line 88) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'data' in its own useMemo() Hook.","VariableDeclarator","'_minusPage' is assigned a value but never used.","'_addPage' is assigned a value but never used.","Duplicate key 'background'.","'ExpandMoreIcon' is defined but never used.","'Accordion' is assigned a value but never used.","'AccordionSummary' is assigned a value but never used.","'AccordionDetails' is assigned a value but never used.","'CustomInput' is defined but never used.","'VoiceToneList' is defined but never used.","'checked' is assigned a value but never used.","'activeTone' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'makeStyles' is defined but never used.","'useLocation' is defined but never used.","'icon' is defined but never used.","'inputRef' is assigned a value but never used.","'Grid' is defined but never used.","'DeleteForeverIcon' is defined but never used.","'SaveAltIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'useStyles' is assigned a value but never used.","'motion' is defined but never used.","'InputLabel' is defined but never used.","'VisibilityOff' is defined but never used.","'Visibility' is defined but never used.","'getUserDetails' is defined but never used.","'updateUserProfile' is defined but never used.","'USER_UPDATE_PROFILE_FAIL' is defined but never used.","'USER_UPDATE_PROFILE_REQUEST' is defined but never used.","'USER_UPDATE_PROFILE_SUCCESS' is defined but never used.","'USER_UPDATE_REQUEST' is defined but never used.","'USER_UPDATE_SUCCESS' is defined but never used.","'USER_UPDATE_FAIL' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'signIn' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'userUpdate' is assigned a value but never used.","'Badge' is defined but never used.","'CustomCard' is defined but never used.","'EditIcon' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","no-global-assign","no-unsafe-negation"]